//----------------------------------------------------------------------------------------------------
// cEntity
// : 엔티티 객체
//  -JHL-2012-03-10
//----------------------------------------------------------------------------------------------------

using System;
using System.Linq;
using System.Text;
using System.Net.Sockets;
using System.Threading;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

namespace BlueEngine
{
	//----------------------------------------------------------------------------------------------------
	/// <summary>
	/// 엔티티 오브젝트
	/// </summary>
	//----------------------------------------------------------------------------------------------------
    public class cEntity : cObject
    {
		//----------------------------------------------------------------------------------------------------
		#region 상수
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 최대 아이디
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		public		const	uint	MAX_ID	= uint.MaxValue;
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// NULL 아이디
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		public		const	uint	NULL_ID	= 0;
		#endregion

		//----------------------------------------------------------------------------------------------------
		#region 변수
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 유니크한 아이디 생성을 위한 정적 변수.
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		private		static	uint							s_unique_id;
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 정적 변수를 위한 클래스 Lock.
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		protected	static	object							s_lock = new object();
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 활성/비활성
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		protected			bool							m_enable;
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 아이디.
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		protected			uint							m_id;
        //----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 이름
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		protected			string							m_name;
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 부모 오브젝트
		/// </summary>
		//----------------------------------------------------------------------------------------------------
        protected			cObject							m_parent;
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 자식 오브젝트 리스트(key:ID)
		/// </summary>
		//----------------------------------------------------------------------------------------------------
        protected			Dictionary<uint,cObject>		m_children;
		#endregion 변수

		//----------------------------------------------------------------------------------------------------
		#region 속성
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 새로운 유니크한 아이디를 얻는다.
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		protected	static	uint					UniqueID		{ get { lock(s_lock){return ++s_unique_id;}}}
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 활성/비활성
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		public			bool						Enable			{get{return m_enable;}set{m_enable=value;}}
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 아이디.
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		public			uint						ID				{ get { return m_id; } set { m_id=value; } }
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 이름
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		public			string						Name			{ get { return m_name; } set { m_name=value; } }
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 부모 오브젝트
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		public			cObject						Parent			{ get { return m_parent; } set { m_parent=value; } }
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 자식 오브젝트 리스트(key:ID)
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		public			Dictionary<uint,cObject>	Children		{ get { return m_children; } }
		#endregion 속성

        //----------------------------------------------------------------------------------------------------
 		#region 생성자
        //----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 생성자.
		/// </summary>
        //----------------------------------------------------------------------------------------------------
        public cEntity()
        {
			m_id			= UniqueID;
			m_name			= this.GetType().Name;
	        m_children		= new Dictionary<uint,cObject>();
        }
        //----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 생성자.
		/// </summary>
        //----------------------------------------------------------------------------------------------------
        public cEntity( string name )
        {
			m_id			= UniqueID;
			m_name			= name;
	        m_children		= new Dictionary<uint,cObject>();
        }
		#endregion

        //----------------------------------------------------------------------------------------------------
		#region 자식
        //----------------------------------------------------------------------------------------------------
		/// <summary>
		///	자식 오브젝트 추가.
		/// </summary>
		/// <param name="id">아이디.</param>
		/// <param name="value">오브젝트 인스턴스.</param>
		/// <returns>결과</returns>
        //----------------------------------------------------------------------------------------------------
		public bool AddChild( uint id, cObject value )
		{
			lock(m_children)
			{
				if( m_children.ContainsKey( id ) ) return false;
				m_children.Add( id, value );
				return true;
			}
		}
        //----------------------------------------------------------------------------------------------------
		/// <summary>
		///	자식 오브젝트 삭제.
		/// </summary>
		/// <param name="id">삭제할 오브젝트 아이디.</param>
        //----------------------------------------------------------------------------------------------------
		public void RemoveChild( uint id )
		{
			lock(m_children)
			{
				m_children.Remove( id );
			}
		}
        //----------------------------------------------------------------------------------------------------
		/// <summary>
		///	자식 오브젝트를 얻어온다.
		/// </summary>
		/// <param name="id">얻어올 오브젝트 아이디.</param>
		/// <param name="value">출력될 오브젝트.</param>
		/// <returns>성공 유무.</returns>
        //----------------------------------------------------------------------------------------------------
		public bool GetChild( uint id, out cObject value )
		{
			lock(m_children)
			{
				return m_children.TryGetValue( id, out value );
			}
		}
		#endregion
	}
}
