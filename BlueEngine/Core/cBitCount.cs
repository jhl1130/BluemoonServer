//----------------------------------------------------------------------------------------------------
// cBitCount
// : 비트카운터
//  -JHL-2012-02-20
//----------------------------------------------------------------------------------------------------
using System;

namespace BlueEngine
{
	//----------------------------------------------------------------------------------------------------
	/// <summary>
	/// On 상태 비트수를 얻기 위한 객체.
	/// </summary>
	//----------------------------------------------------------------------------------------------------
	public class cBitCount
	{
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// On비트개수 얻기
		/// </summary>
		/// <param name="n">데이터</param>
		/// <returns>개수</returns>
		//----------------------------------------------------------------------------------------------------
		public static int BitCount( sbyte n )
		{
			int count=0;
			while(n!=0)	{++count; n&=(sbyte)(n-1);}
			return count;
		}
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// On비트개수 얻기
		/// </summary>
		/// <param name="n">데이터</param>
		/// <returns>개수</returns>
		//----------------------------------------------------------------------------------------------------
		public static int BitCount( byte n )
		{
			int count=0;
			while(n!=0)	{++count; n&=(byte)(n-1);}
			return count;
		}
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// On비트개수 얻기
		/// </summary>
		/// <param name="n">데이터</param>
		/// <returns>개수</returns>
		//----------------------------------------------------------------------------------------------------
		public static int BitCount( short n )
		{
			int count=0;
			while(n!=0)	{++count; n&=(short)(n-1);}
			return count;
		}
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// On비트개수 얻기
		/// </summary>
		/// <param name="n">데이터</param>
		/// <returns>개수</returns>
		//----------------------------------------------------------------------------------------------------
		public static int BitCount( ushort n )
		{
			int count=0;
			while(n!=0)	{++count; n&=(ushort)(n-1);}
			return count;
		}
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// On비트개수 얻기
		/// </summary>
		/// <param name="n">데이터</param>
		/// <returns>개수</returns>
		//----------------------------------------------------------------------------------------------------
		public static int BitCount( int n )
		{
			int count=0;
			while(n!=0)	{++count; n&=(int)(n-1);}
			return count;
		}
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// On비트개수 얻기
		/// </summary>
		/// <param name="n">데이터</param>
		/// <returns>개수</returns>
		//----------------------------------------------------------------------------------------------------
		public static int BitCount( uint n )
		{
			int count=0;
			while(n!=0)	{++count; n&=(uint)(n-1);}
			return count;
		}
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// On비트개수 얻기
		/// </summary>
		/// <param name="n">데이터</param>
		/// <returns>개수</returns>
		//----------------------------------------------------------------------------------------------------
		public static int BitCount( long n )
		{
			int count=0;
			while(n!=0)	{++count; n&=(long)(n-1);}
			return count;
		}
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// On비트개수 얻기
		/// </summary>
		/// <param name="n">데이터</param>
		/// <returns>개수</returns>
		//----------------------------------------------------------------------------------------------------
		public static int BitCount( ulong n )
		{
			int count=0;
			while(n!=0)	{++count; n&=(ulong)(n-1);}
			return count;
		}
	}

}
