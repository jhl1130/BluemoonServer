//----------------------------------------------------------------------------------------------------
// cChannel
// : 채널 객체
//  -JHL-2012-03-02
//----------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace BlueEngine
{
	//----------------------------------------------------------------------------------------------------
	/// <summary>
	/// 채널 객체
	/// </summary>
	//----------------------------------------------------------------------------------------------------
	public class cChannel : cEntity
	{
		//----------------------------------------------------------------------------------------------------
		#region 상수
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 최대 채널 아이디
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		public		const	byte		MAX_CHANNEL_ID		= byte.MaxValue;
		#endregion

		//----------------------------------------------------------------------------------------------------
		#region 변수
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 채널 최대 수용 인원
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		protected	static	ushort		s_max_user			= 300;
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 채널 아이디
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		private		static	byte		s_channel_id;
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 채널 아이디
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		protected			byte		m_channel_id;
		#endregion

		//----------------------------------------------------------------------------------------------------
		#region 속성
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 최대 유저수
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		public		static		ushort		MaxUser				{get{return s_max_user;}set{s_max_user=value;}}
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 최대 채널 개수 ( 서버 최대 수용 인원 / 최대 채널 유저수 )
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		public		static		byte		MaxChannel			{get{return (byte)(cServer.MaxUser/MaxUser);}}
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 새로운 유니크한 아이디를 얻는다.
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		protected	static		byte		UniqueChannelID		{get{ lock(s_lock){return ++s_channel_id;}}}
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 채널 아이디
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		public					byte		ChannelID			{get{return m_channel_id;}}
		#endregion


		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 생성자
		/// </summary>
		/// <param name="channel_id">채널 아이디</param>
		//----------------------------------------------------------------------------------------------------
		public cChannel( byte channel_id ):base()
		{
			m_channel_id = channel_id;
		}
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 생성자
		/// </summary>
		//----------------------------------------------------------------------------------------------------
		public cChannel():base()
		{
			m_channel_id = UniqueChannelID;
		}

		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 클라이언트 추가
		/// </summary>
		/// <param name="client">클라이언트 객체</param>
		//----------------------------------------------------------------------------------------------------
		public bool AddClient( cClient client )
		{
			if( client != null )
			{
				if( Children.ContainsKey( client.ClientID ) ) return true;
				if( AddChild( client.ClientID, client ) )
				{
					client.Channel = ChannelID;
					return true;
				}
			}
			return false;
		}

		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 클라이언트 삭제
		/// </summary>
		/// <param name="client">클라이언트 객체</param>
		//----------------------------------------------------------------------------------------------------
		public void RemoveClient( cClient client )
		{
			if( client != null )
			{
				RemoveChild( client.ClientID );
				client.Channel = (byte)cChannel.NULL_ID;
			}
		}
		//----------------------------------------------------------------------------------------------------
		/// <summary>
		/// 클라이언트 얻기
		/// </summary>
		/// <param name="client_id">클라이언트 아이디</param>
		//----------------------------------------------------------------------------------------------------
		public cClient GetClient( uint client_id )
		{
			cObject child=null;
			if( GetChild( client_id, out child ) )
			{
				return (cClient)child;
			}
			return null;
		}
	}
}
