<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlueEngine</name>
    </assembly>
    <members>
        <member name="T:BlueEngine.cBitStream">
            <summary>
            비트 스트림 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.c_size_byte">
            <summary>
            byte형 비트수
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.c_size_char">
            <summary>
            char형 비트수
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.c_size_short">
            <summary>
            short형 비트수
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.c_size_int">
            <summary>
            int형 비트수
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.c_size_float">
            <summary>
            float형 비트수
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.c_size_long">
            <summary>
            long형 비트수
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.c_size_double">
            <summary>
            double형 비트수
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.c_bit_buffer_unit_size">
            <summary>
            비트버퍼 저장 단위 크기
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.c_bit_buffer_unit_size_shift">
            <summary>
            비트버퍼 저장 단위 크기의 쉬프트 수
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.c_bit_buffer_unit_size_mod">
            <summary>
            비트버퍼 저장 단위 크기의 비트필터(111111)
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.c_bit_mask">
            <summary>
            비트 마스트
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.m_open">
            <summary>
            오픈 플래그
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.m_buffer">
            <summary>
            버퍼
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.m_buffer_length">
            <summary>
            버퍼 길이
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.m_buffer_index">
            <summary>
            버퍼 인덱스
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.m_bit_index">
            <summary>
            비트 인덱스
            </summary>
        </member>
        <member name="F:BlueEngine.cBitStream.s_format_provider">
            <summary>
            포맷 프로바이더
            </summary>
        </member>
        <member name="M:BlueEngine.cBitStream.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:BlueEngine.cBitStream.#ctor(System.Int64)">
            <summary>
            생성자
            </summary>
            <param name="capacity">초기용량</param>
        </member>
        <member name="M:BlueEngine.cBitStream.#ctor(System.IO.Stream)">
            <summary>
            생성자
            </summary>
            <param name="stream">스트림객체</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Boolean)">
            <summary>
            기록
            </summary>
            <param name="bit">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Boolean[])">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Boolean[],System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Byte)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Byte,System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Byte,System.Byte)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.String)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Byte[])">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Byte[],System.Byte)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.String[])">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.SByte)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.SByte,System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="index">시작인덱스</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.SByte,System.SByte)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.SByte[])">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.SByte[],System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.SByte[],System.SByte)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.WriteByte(System.Byte)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Char)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Char,System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Char[])">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt16)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt16,System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt16,System.UInt16)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt16[])">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt16[],System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt16[],System.UInt16)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int16)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int16,System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int16,System.Int16)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int16[])">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int16[],System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int16[],System.Int16)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt32,System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt32,System.UInt32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt32[])">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt32[],System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt32[],System.UInt32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int32,System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int32[])">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int32[],System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int32[],System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Single)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Single,System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Single,System.Single,System.Byte)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
            <param name="point">소숫점 자릿수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Single[])">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Single[],System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Single[],System.Single,System.Byte)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
            <param name="point">소숫점 자릿수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt64)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt64,System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt64,System.UInt64)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt64[])">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt64[],System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.UInt64[],System.UInt64)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int64)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int64,System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int64,System.Int64)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int64[])">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int64[],System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Int64[],System.Int64)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Double)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Double,System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Double,System.Double,System.Byte)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
            <param name="point">소숫점 자릿수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Double[])">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Double[],System.Int32,System.Int32)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Double[],System.Double,System.Byte)">
            <summary>
            기록
            </summary>
            <param name="bits">데이터</param>
            <param name="max_value">최대값</param>
            <param name="point">소숫점 자릿수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Write(System.Object,System.UInt64,System.Byte)">
            <summary>
            기록
            </summary>
            <param name="value">데이터</param>
            <param name="max_size">최대값</param>
            <param name="point">소숫점 자릿수</param>
        </member>
        <member name="M:BlueEngine.cBitStream.WriteTo(System.IO.Stream)">
            <summary>
            바이트 스트림 객체에 기록
            </summary>
            <param name="bits">스트림 객체</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
            읽기
            </summary>
            <param name="bits">데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Boolean@)">
            <summary>
            읽기
            </summary>
            <param name="bit">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Boolean[])">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Boolean[],System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Byte@)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Byte@,System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Byte@,System.Byte)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.String@)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Byte[])">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Byte[],System.Byte)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.String[])">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.SByte@)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.SByte@,System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.SByte@,System.SByte)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.SByte[])">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.SByte[],System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.SByte[],System.SByte)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ReadByte">
            <summary>
            1바이트 읽기
            </summary>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ToByteArray">
            <summary>
            바이트배열로 일기
            </summary>
            <returns>읽은데이터</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Char@)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Char@,System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Char[])">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Char[],System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt16@)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt16@,System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt16@,System.UInt16)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt16[])">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt16[],System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt16[],System.UInt16)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int16@)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int16@,System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int16@,System.Int16)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int16[])">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int16[],System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int16[],System.Int16)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt32@)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt32@,System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt32@,System.UInt32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt32[])">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt32[],System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt32[],System.UInt32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int32@)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int32@,System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int32@,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int32[])">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int32[],System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int32[],System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Single@)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Single@,System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Single@,System.Single,System.Byte)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <param name="point">소숫점 자릿수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Single[])">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Single[],System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Single[],System.Single,System.Byte)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <param name="point">소숫점 자릿수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt64@)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt64@,System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt64@,System.UInt64)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt64[])">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt64[],System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.UInt64[],System.UInt64)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int64@)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int64@,System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int64@,System.Int64)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int64[])">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int64[],System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Int64[],System.Int64)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Double@)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Double@,System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="index">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Double@,System.Double,System.Byte)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <param name="point">소숫점 자릿수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Double[])">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Double[],System.Int32,System.Int32)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Double[],System.Double,System.Byte)">
            <summary>
            읽기
            </summary>
            <param name="bits">[출력]데이터</param>
            <param name="max_value">최대값</param>
            <param name="point">소숫점 자릿수</param>
            <returns>읽은비트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Read(System.Type,System.Object@,System.Object,System.UInt64,System.Byte)">
            <summary>
            읽기
            </summary>
            <param name="type">타입</param>
            <param name="out_value">[출력]데이터</param>
            <param name="in_value">[입력]데이터</param>
            <param name="max_size">최대값</param>
            <param name="point">소숫점 자릿수</param>
            <returns></returns>
        </member>
        <member name="M:BlueEngine.cBitStream.AND(BlueEngine.cBitStream)">
            <summary>
            AND 연산
            </summary>
            <param name="bits">비트스트림</param>
            <returns>비트스트림</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.OR(BlueEngine.cBitStream)">
            <summary>
            OR 연산
            </summary>
            <param name="bits">비트스트림</param>
            <returns>비트스트림</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.XOR(BlueEngine.cBitStream)">
            <summary>
            XOR 연산
            </summary>
            <param name="bits">비트스트림</param>
            <returns>비트스트림</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.NOT">
            <summary>
            NOT 연산
            </summary>
            <returns>비트스트림</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ShiftLeft(System.Int64)">
            <summary>
            좌측 쉬프트
            </summary>
            <param name="count">개수</param>
            <returns>비트스트림</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ShiftRight(System.Int64)">
            <summary>
            우측 쉬프트
            </summary>
            <param name="count">개수</param>
            <returns>비트스트림</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ToString">
            <summary>
            문자열로 출력
            </summary>
            <returns>문자열</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ToString(System.Boolean)">
            <summary>
            문자열로 출력
            </summary>
            <param name="bit">bool형 데이터</param>
            <returns>문자열</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ToString(System.Byte)">
            <summary>
            문자열로 출력
            </summary>
            <param name="bits">byte형 데이터</param>
            <returns>문자열</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ToString(System.SByte)">
            <summary>
            문자열로 출력
            </summary>
            <param name="bits">sbyte형 데이터</param>
            <returns>문자열</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ToString(System.Char)">
            <summary>
            문자열로 출력
            </summary>
            <param name="bits">char형 데이터</param>
            <returns>문자열</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ToString(System.UInt16)">
            <summary>
            문자열로 출력
            </summary>
            <param name="bits">ushort형 데이터</param>
            <returns>문자열</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ToString(System.Int16)">
            <summary>
            문자열로 출력
            </summary>
            <param name="bits">short형 데이터</param>
            <returns>문자열</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ToString(System.UInt32)">
            <summary>
            문자열로 출력
            </summary>
            <param name="bits">uint형 데이터</param>
            <returns>문자열</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ToString(System.Int32)">
            <summary>
            문자열로 출력
            </summary>
            <param name="bits">int형 데이터</param>
            <returns>문자열</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ToString(System.UInt64)">
            <summary>
            문자열로 출력
            </summary>
            <param name="bits">ulong형 데이터</param>
            <returns>문자열</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ToString(System.Int64)">
            <summary>
            문자열로 출력
            </summary>
            <param name="bits">long형 데이터</param>
            <returns>문자열</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ToString(System.Single)">
            <summary>
            문자열로 출력
            </summary>
            <param name="bits">float형 데이터</param>
            <returns>문자열</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.ToString(System.Double)">
            <summary>
            문자열로 출력
            </summary>
            <param name="bits">double형 데이터</param>
            <returns>문자열</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.UpdateLengthForWrite(System.UInt32)">
            <summary>
            기록후 길이값 갱신
            </summary>
            <param name="bits">길이</param>
        </member>
        <member name="M:BlueEngine.cBitStream.UpdateIndicesForWrite(System.UInt32)">
            <summary>
            기록후 인덱스값 갱신
            </summary>
            <param name="bits">인덱스</param>
        </member>
        <member name="M:BlueEngine.cBitStream.UpdateIndicesForRead(System.UInt32)">
            <summary>
            읽은후 인덱스값 갱신
            </summary>
            <param name="bits">인덱스</param>
        </member>
        <member name="M:BlueEngine.cBitStream.ReDimPreserve(System.UInt32[],System.UInt32)">
            <summary>
            버퍼 확장 (기존 데이터 유지)
            </summary>
            <param name="buffer">기존버퍼</param>
            <param name="new_length">변경할 길이</param>
            <returns>새버퍼</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Close">
            <summary>
            닫힘
            </summary>
        </member>
        <member name="M:BlueEngine.cBitStream.GetBuffer">
            <summary>
            버퍼 얻기
            </summary>
            <returns>버퍼</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Copy">
            <summary>
            복제
            </summary>
            <returns>비트스트림</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            비동기 읽기 시작
            </summary>
            <param name="buffer">버퍼</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
            <param name="callback">콜백</param>
            <param name="state">사용자변수</param>
            <returns>비동기 결과</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            비동기 쓰기 시작
            </summary>
            <param name="buffer">버퍼</param>
            <param name="offset">오프셋</param>
            <param name="count">개수</param>
            <param name="callback">콜백</param>
            <param name="state">사용자변수</param>
            <returns>비동기 결과</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.EndRead(System.IAsyncResult)">
            <summary>
            비동기 읽기 종료
            </summary>
            <param name="asyncResult">비동기 결과</param>
            <returns>읽은 바이트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.EndWrite(System.IAsyncResult)">
            <summary>
            비동기 쓰기 종료
            </summary>
            <param name="asyncResult">비동기 결과</param>
            <returns>읽은 바이트수</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            포지션 이동
            </summary>
            <param name="offset">오프셋</param>
            <param name="origin">시작위치</param>
            <returns>포지션</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.SetLength(System.Int64)">
            <summary>
            길이 변경
            </summary>
            <param name="value">길이값</param>
        </member>
        <member name="M:BlueEngine.cBitStream.Flush">
            <summary>
            플러시
            </summary>
        </member>
        <member name="M:BlueEngine.cBitStream.op_Implicit(System.IO.MemoryStream)~BlueEngine.cBitStream">
            <summary>
            스트림 입력
            </summary>
            <param name="bits">메모리스트림</param>
            <returns>비트스트림</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.op_Implicit(BlueEngine.cBitStream)~System.IO.MemoryStream">
            <summary>
            스트림 입력
            </summary>
            <param name="bits">비트스트림</param>
            <returns>메모리스트림</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.op_Implicit(System.IO.FileStream)~BlueEngine.cBitStream">
            <summary>
            스트림 입력
            </summary>
            <param name="bits">파일스트림</param>
            <returns>비트스트림</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.op_Implicit(System.IO.BufferedStream)~BlueEngine.cBitStream">
            <summary>
            스트림 입력
            </summary>
            <param name="bits">버퍼스트림</param>
            <returns>비트스트림</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.op_Implicit(BlueEngine.cBitStream)~System.IO.BufferedStream">
            <summary>
            스트림 입력
            </summary>
            <param name="bits">비트스트림</param>
            <returns>버퍼스트림</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.op_Implicit(System.Net.Sockets.NetworkStream)~BlueEngine.cBitStream">
            <summary>
            스트림 입력
            </summary>
            <param name="bits">네트워크스트림</param>
            <returns>비트스트림</returns>
        </member>
        <member name="M:BlueEngine.cBitStream.op_Implicit(System.Security.Cryptography.CryptoStream)~BlueEngine.cBitStream">
            <summary>
            스트림 입력
            </summary>
            <param name="bits">암호화스트림</param>
            <returns>비트스트림</returns>
        </member>
        <member name="P:BlueEngine.cBitStream.Length">
            <summary>
            버퍼 길이(단위:1비트)
            </summary>
        </member>
        <member name="P:BlueEngine.cBitStream.Length8">
            <summary>
            버퍼 길이(단위:8비트)
            </summary>
        </member>
        <member name="P:BlueEngine.cBitStream.Length16">
            <summary>
            버퍼 길이(단위:16비트)
            </summary>
        </member>
        <member name="P:BlueEngine.cBitStream.Length32">
            <summary>
            버퍼 길이(단위:32비트)
            </summary>
        </member>
        <member name="P:BlueEngine.cBitStream.Length64">
            <summary>
            버퍼 길이(단위:64비트)
            </summary>
        </member>
        <member name="P:BlueEngine.cBitStream.Capacity">
            <summary>
            버퍼 용량(버퍼길이*저장단위)
            </summary>
        </member>
        <member name="P:BlueEngine.cBitStream.CanRead">
            <summary>
            읽기 가능 유무
            </summary>
        </member>
        <member name="P:BlueEngine.cBitStream.CanSeek">
            <summary>
            검색 가능 유무
            </summary>
        </member>
        <member name="P:BlueEngine.cBitStream.CanWrite">
            <summary>
            쓰기 가능 유무
            </summary>
        </member>
        <member name="P:BlueEngine.cBitStream.CanSetLength">
            <summary>
            버퍼길이 변경 가능 유무
            </summary>
        </member>
        <member name="P:BlueEngine.cBitStream.CanFlush">
            <summary>
            플러시 가능 유무
            </summary>
        </member>
        <member name="P:BlueEngine.cBitStream.Position">
            <summary>
            비트 포지션
            </summary>
        </member>
        <member name="T:BlueEngine.cUserItem">
            <summary>
             유저 아이템 객체
            </summary>
        </member>
        <member name="T:BlueEngine.cObject">
            <summary>
            베이스 오브젝트
            </summary>
        </member>
        <member name="F:BlueEngine.cObject.s_console">
            <summary>
            콘솔 객체
            </summary>
        </member>
        <member name="M:BlueEngine.cObject.ToString">
            <summary>
            오브젝트를 문자열로 표현 한다.
            </summary>
            <returns>변환된 문자열.</returns>
        </member>
        <member name="M:BlueEngine.cObject.Exception">
            <summary>
            예외처리를 위한 예외를 발생 시킨다.
            </summary>
            <returns>예외처리 객체.</returns>
        </member>
        <member name="M:BlueEngine.cObject.Exception(System.Object[])">
            <summary>
            예외처리를 위한 예외를 발생 시킨다.
            </summary>
            <param name="values">데이터리스트.</param>
            <returns>예외처리 객체.</returns>
        </member>
        <member name="M:BlueEngine.cObject.Log(System.Object[])">
            <summary>
            메시지 로그를 기록한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cObject.Print(System.Object[])">
            <summary>
            메시지를 콘솔창에 출력 한다.(클래스명+데이터)
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cObject.Error(System.Object[])">
            <summary>
            에러메시지를 콘솔창에 출력 한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cObject.ValueToString(System.Object[])">
            <summary>
            데이터리스트를 문자열로 변환한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="P:BlueEngine.cObject.Console">
            <summary>
            콘솔 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cUserItem.MAX_ITEM_ID">
            <summary>
            최대 아이템 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cUserItem.item_id">
            <summary>
            아이템 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cUserItem.item_info_id">
            <summary>
            아이템정보 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cUserItem.slot">
            <summary>
            슬롯번호
            </summary>
        </member>
        <member name="F:BlueEngine.cUserItem.upgrade">
            <summary>
            업그래이드
            </summary>
        </member>
        <member name="T:BlueEngine.cStage">
            <summary>
            스테이지 객체
            </summary>
        </member>
        <member name="T:BlueEngine.cEntity">
            <summary>
            엔티티 오브젝트
            </summary>
        </member>
        <member name="F:BlueEngine.cEntity.MAX_ID">
            <summary>
            최대 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cEntity.NULL_ID">
            <summary>
            NULL 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cEntity.s_unique_id">
            <summary>
            유니크한 아이디 생성을 위한 정적 변수.
            </summary>
        </member>
        <member name="F:BlueEngine.cEntity.s_lock">
            <summary>
            정적 변수를 위한 클래스 Lock.
            </summary>
        </member>
        <member name="F:BlueEngine.cEntity.m_enable">
            <summary>
            활성/비활성
            </summary>
        </member>
        <member name="F:BlueEngine.cEntity.m_id">
            <summary>
            아이디.
            </summary>
        </member>
        <member name="F:BlueEngine.cEntity.m_name">
            <summary>
            이름
            </summary>
        </member>
        <member name="F:BlueEngine.cEntity.m_parent">
            <summary>
            부모 오브젝트
            </summary>
        </member>
        <member name="F:BlueEngine.cEntity.m_children">
            <summary>
            자식 오브젝트 리스트(key:ID)
            </summary>
        </member>
        <member name="M:BlueEngine.cEntity.#ctor">
            <summary>
            생성자.
            </summary>
        </member>
        <member name="M:BlueEngine.cEntity.#ctor(System.String)">
            <summary>
            생성자.
            </summary>
        </member>
        <member name="M:BlueEngine.cEntity.AddChild(System.UInt32,BlueEngine.cObject)">
            <summary>
            자식 오브젝트 추가.
            </summary>
            <param name="id">아이디.</param>
            <param name="value">오브젝트 인스턴스.</param>
            <returns>결과</returns>
        </member>
        <member name="M:BlueEngine.cEntity.RemoveChild(System.UInt32)">
            <summary>
            자식 오브젝트 삭제.
            </summary>
            <param name="id">삭제할 오브젝트 아이디.</param>
        </member>
        <member name="M:BlueEngine.cEntity.GetChild(System.UInt32,BlueEngine.cObject@)">
            <summary>
            자식 오브젝트를 얻어온다.
            </summary>
            <param name="id">얻어올 오브젝트 아이디.</param>
            <param name="value">출력될 오브젝트.</param>
            <returns>성공 유무.</returns>
        </member>
        <member name="P:BlueEngine.cEntity.UniqueID">
            <summary>
            새로운 유니크한 아이디를 얻는다.
            </summary>
        </member>
        <member name="P:BlueEngine.cEntity.Enable">
            <summary>
            활성/비활성
            </summary>
        </member>
        <member name="P:BlueEngine.cEntity.ID">
            <summary>
            아이디.
            </summary>
        </member>
        <member name="P:BlueEngine.cEntity.Name">
            <summary>
            이름
            </summary>
        </member>
        <member name="P:BlueEngine.cEntity.Parent">
            <summary>
            부모 오브젝트
            </summary>
        </member>
        <member name="P:BlueEngine.cEntity.Children">
            <summary>
            자식 오브젝트 리스트(key:ID)
            </summary>
        </member>
        <member name="F:BlueEngine.cStage.MAX_STAGE_ID">
            <summary>
            최대 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cStage.MAX_STAGE">
            <summary>
            최대 스테이지 개수
            </summary>
        </member>
        <member name="F:BlueEngine.cStage.MAX_STAGE_POS">
            <summary>
            최대 위치값
            </summary>
        </member>
        <member name="F:BlueEngine.cStage.MAX_STAGE_POS_POINT">
            <summary>
            최대 위치값 소숫점 자리수
            </summary>
        </member>
        <member name="F:BlueEngine.cStage.m_stage_id">
            <summary>
            스테이지 아이디
            </summary>
        </member>
        <member name="M:BlueEngine.cStage.#ctor(System.UInt32)">
            <summary>
            생성자
            </summary>
            <param name="stage_id">스테이지 아이디</param>
        </member>
        <member name="P:BlueEngine.cStage.StageID">
            <summary>
            스테이지 아이디
            </summary>
        </member>
        <member name="T:BlueEngine.cSkill">
            <summary>
            스킬 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cSkill.MAX_SKILL_ID">
            <summary>
            최대 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cSkill.MAX_TARGET">
            <summary>
            최대 동시 타겟 개수
            </summary>
        </member>
        <member name="F:BlueEngine.cSkill.m_skill_id">
            <summary>
            스킬 아이디
            </summary>
        </member>
        <member name="P:BlueEngine.cSkill.SkillID">
            <summary>
            스킬 아이디
            </summary>
        </member>
        <member name="T:BlueEngine.cUserAccount">
            <summary>
             데이터베이스 테이블 객체
            </summary>
        </member>
        <member name="T:BlueEngine.cDataTables">
            <summary>
             데이터베이스 테이블 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cDataTables.m_table">
            <summary>
            테이블
            </summary>
        </member>
        <member name="F:BlueEngine.cDataTables.m_adapter">
            <summary>
            데이터베이스 아답터
            </summary>
        </member>
        <member name="F:BlueEngine.cDataTables.KeyName">
            <summary>
            키 이름
            </summary>
        </member>
        <member name="F:BlueEngine.cDataTables.Key">
            <summary>
            키
            </summary>
        </member>
        <member name="M:BlueEngine.cDataTables.#ctor(System.Data.DataTable,System.Data.Common.DbDataAdapter,System.String)">
            <summary>
            생성자
            </summary>
            <param name="table">테이블 객체</param>
            <param name="adapter">아답터 객체</param>
            <param name="key_name">키 이름</param>
        </member>
        <member name="M:BlueEngine.cDataTables.Read(BlueEngine.cDatabase,System.Object)">
            <summary>
            DB로 부터 데이터 읽기
            </summary>
            <param name="db">데이터베이스 객체</param>
            <param name="key">키값</param>
            <returns>성공유무</returns>
        </member>
        <member name="M:BlueEngine.cDataTables.Update(BlueEngine.cDatabase,System.Data.DataTable,System.Data.Common.DbDataAdapter)">
            <summary>
            DB에 데이터 갱신
            </summary>
            <param name="db">데이터베이스 객체</param>
            <param name="table">데이터테이블 객체</param>
            <param name="adapter">아답터 객체</param>
            <returns>성공유무</returns>
        </member>
        <member name="M:BlueEngine.cDataTables.AddColmn(System.Data.DataTable,System.Type,System.String,System.Boolean)">
            <summary>
            컬럼 추가
            </summary>
            <param name="table">데이터테이블</param>
            <param name="type">데이터타입</param>
            <param name="name">컬럼명</param>
            <param name="auto_inc">자동증가유무</param>
            <returns>컬럼객체</returns>
        </member>
        <member name="M:BlueEngine.cDataTables.GetValue(System.String)">
            <summary>
            데이터를 출력한다.
            주의:PrimaryKey를 지정해야 사용할 수 있다.
            </summary>
            <param name="colmn">컬럼명</param>
            <returns>데이터</returns>
        </member>
        <member name="M:BlueEngine.cDataTables.GetValue(System.Int32)">
            <summary>
            데이터를 출력한다.
            주의:PrimaryKey를 지정해야 사용할 수 있다.
            </summary>
            <param name="colmn_index">컬럼인덱스</param>
            <returns>데이터</returns>
        </member>
        <member name="M:BlueEngine.cDataTables.SetValue(System.String,System.Object)">
            <summary>
            데이터를 입력한다.
            주의:PrimaryKey를 지정해야 사용할 수 있다.
            </summary>
            <param name="colmn">컬럼명</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cDataTables.SetValue(System.Int32,System.Object)">
            <summary>
            데이터를 입력한다.
            주의:PrimaryKey를 지정해야 사용할 수 있다.
            </summary>
            <param name="colmn_index">컬럼인덱스</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cDataTables.GetDefaultValue">
            <summary>
            기본값 리턴
            </summary>
            <returns>기본값</returns>
        </member>
        <member name="P:BlueEngine.cDataTables.Item(System.String)">
            <summary>
            레코드에 데이터를 읽고 쓰기.
            주의:PrimaryKey를 지정해야 사용할 수 있다.
            </summary>
            <param name="colmn">컬럼명</param>
            <returns>데이터</returns>
        </member>
        <member name="P:BlueEngine.cDataTables.Item(System.Int32)">
            <summary>
            레코드에 데이터를 읽고 쓰기.
            주의:PrimaryKey를 지정해야 사용할 수 있다.
            </summary>
            <param name="colmn_index">컬럼인덱스</param>
            <returns>데이터</returns>
        </member>
        <member name="F:BlueEngine.cUserAccount.MAX_ACCOUNT_ID">
            <summary>
            최대 계정 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount.NULL_ACCOUNT_ID">
            <summary>
            빈 계정 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount.s_table">
            <summary>
            데이터 테이블
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount.s_adapter">
            <summary>
            데이터베이스 아답터
            </summary>
        </member>
        <member name="M:BlueEngine.cUserAccount.Initialize(BlueEngine.cDatabase)">
            <summary>
            초기화
            </summary>
        </member>
        <member name="M:BlueEngine.cUserAccount.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:BlueEngine.cUserAccount.Update(BlueEngine.cDatabase)">
            <summary>
            DB에 데이터 갱신
            </summary>
            <param name="db">데이터베이스 객체</param>
            <returns>성공유무</returns>
        </member>
        <member name="T:BlueEngine.cUnityNetConnector">
            <summary>
            유니티전용 네트워크 커넥터
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_init">
            <summary>
            초기화 플래그.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_version">
            <summary>
            클라이언트 버전
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.m_version">
            <summary>
            클라이언트 버전
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_thread_connect">
            <summary>
            루프 쓰레드.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_mutex">
            <summary>
            뮤텍스. 
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_client">
            <summary>
            클라이언트 객체.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_server_address">
            <summary>
            서버 주소.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.m_server_address">
            <summary>
            서버 주소(입력용).
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.m_server_addresses">
            <summary>
            서버 주소 목록.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_server_port">
            <summary>
            서버 포트.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.m_server_port">
            <summary>
            서버 포트(입력용).
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.m_server_ports">
            <summary>
            서버 포트 목록.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_recv_buf_size">
            <summary>
            수신 버퍼 크기.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.m_recv_buf_size">
            <summary>
            수신 버퍼 크기(입력용).
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_policy_port">
            <summary>
            Polity 서버 포트.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_use_cryptogram">
            <summary>
            패킷 암호화 사용 플래그.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.m_use_cryptogram">
            <summary>
            패킷 암호화 사용 플래그(입력용).
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_cryptogram_iv">
            <summary>
            암호화 초기화 벡터.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.m_cryptogram_iv">
            <summary>
            암호화 초기화 벡터.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_cryptogram_key">
            <summary>
            암호화 비밀키.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.m_cryptogram_key">
            <summary>
            암호화 비밀키.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_clients">
            <summary>
            클라이언트 리스트(key:클라이언트ID)
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_channels">
            <summary>
            채널 리스트(key:채널ID)
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityNetConnector.s_stage_party_count">
            <summary>
            스테이지별 파티 개수(key:스테이지ID)
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.ThreadConnect">
            <summary>
            접속 쓰레드
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.Reset">
            <summary>
            최초 초기화 할때 호출됨
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.Awake">
            <summary>
            최초 활성화될때 호출됨
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.Start">
            <summary>
            최초 업데이트 될때 호출됨.
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.Update">
            <summary>
            업데이트.
            주의 : 상속 받은 곳에서 반드시 base.Update()를 호출해 주어야 한다.
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.OnApplicationQuit">
            <summary>
            어플리케이션 종료.
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.Connect">
            <summary>
            접속
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.OnConnectError(BlueEngine.cNetwork.eResult,System.String)">
            <summary>
            접속 에러
            </summary>
            <param name="result">결과코드</param>
            <param name="error_msg">에러메시지</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.AddClient(System.UInt32,BlueEngine.cClient)">
            <summary>
            클라이언트 추가.
            </summary>
            <param name="id">클라이언트 아이디.</param>
            <param name="value">클라이언트 인스턴스.</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RemoveClient(System.UInt32)">
            <summary>
            클라이언트 삭제.
            </summary>
            <param name="id">클라이언트 아이디.</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RemoveAllClient">
            <summary>
            클라이언트 모두 삭제.
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.GetClient(System.UInt32,BlueEngine.cClient@)">
            <summary>
            클라이언트를 얻어온다.
            </summary>
            <param name="id">클라이언트 아이디.</param>
            <param name="value">클라이언트 객체.</param>
            <returns>성공 유무.</returns>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.AddChannel(System.Byte,BlueEngine.cChannel)">
            <summary>
            채널 추가.
            </summary>
            <param name="id">채널 아이디.</param>
            <param name="value">채널 인스턴스.</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RemoveChannel(System.Byte)">
            <summary>
            채널 삭제.
            </summary>
            <param name="id">채널 아이디.</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RemoveAllChannel">
            <summary>
            채널 모두 삭제.
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.GetChannel(System.Byte,BlueEngine.cChannel@)">
            <summary>
            채널를 얻어온다.
            </summary>
            <param name="id">채널 아이디.</param>
            <param name="value">[출력]채널 객체.</param>
            <returns>성공 유무.</returns>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.SetStagePartyCount(System.UInt32,System.UInt16)">
            <summary>
            스테이지 파티 카운트 입력.
            </summary>
            <param name="id">스테이지 아이디.</param>
            <param name="party_count">파티 개수.</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RemoveAllStagePartyCount">
            <summary>
            스테이지 파티 카운트 모두 삭제.
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.Exception">
            <summary>
            예외처리를 위한 예외를 발생 시킨다.
            </summary>
            <returns>예외처리 객체.</returns>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.Exception(System.Object[])">
            <summary>
            예외처리를 위한 예외를 발생 시킨다.
            </summary>
            <param name="values">데이터리스트.</param>
            <returns>예외처리 객체.</returns>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.Log(System.Object[])">
            <summary>
            메시지 로그를 기록한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.Print(System.Object[])">
            <summary>
            메시지를 콘솔창에 출력 한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.Error(System.Object[])">
            <summary>
            에러메시지를 콘솔창에 출력 한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.DoRecv(BlueEngine.cClient,System.Byte[],System.Int32)">
            <summary>
            데이터 수신 처리
            </summary>
            <param name="client">cClient 인스턴스</param>
            <param name="data">수신 데이터</param>
            <param name="size">수신 데이터 크기</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.OnRecv(BlueEngine.cClient,System.Byte[],System.Int32)">
            <summary>
            데이터 수신 처리
            </summary>
            <param name="client">cClient 인스턴스</param>
            <param name="data">수신 데이터</param>
            <param name="size">수신 데이터 크기</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvServerLogin(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 서버 : 로그인
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvServerIn(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 서버 : 입장
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvServerOut(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 서버 : 퇴장
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvClientInfoDefault(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 클라이언트 : 정보 : 기본
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvChannelList(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 채널 : 리스트
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvChannelIn(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 채널 : 입장
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvChannelOut(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 채널 : 퇴장
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvChannelChat(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 채널 : 채팅
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvPartyChat(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 파티 : 채팅.
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageList(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 리스트
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageInRequest(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 입장 : 요청
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageInAccept(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 입장 : 승락
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageUserIn(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 입장
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageUserOut(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 퇴장
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageUserMove(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 이동
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageUserAttackMonster(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 공격 : 몬스터
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageUserSkillSelf(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 스킬 사용 : 자신
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageUserSkillMonster(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 스킬 사용 : 몬스터
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageUserSkillPos(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 스킬 사용 : 좌표
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageUserDemage(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 데미지
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageUserItemUseSelf(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 아이템 사용 : 자신
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageUserTriggerOn(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 트리거 작동
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageMonIn(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지  : 몬스터 : 입장 : (파티장 권한 필요)
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageMonMove(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지  : 몬스터 : 이동 : (파티장 권한 필요)
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageMonAttackUser(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 몬스터 : 공격 : 유저 : (파티장 권한 필요)
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageMonSkillSelf(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 몬스터 : 스킬 사용 : 자신 : (파티장 권한 필요)
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageMonSkillUser(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 몬스터 : 스킬 사용 : 유저 : (파티장 권한 필요)
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageMonSkillPos(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 몬스터 : 스킬 사용 : 좌표 : (파티장 권한 필요)
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageMonDemage(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 몬스터 : 데미지 : (파티장 권한 필요)
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cUnityNetConnector.RecvStageData(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 커스텀 데이터
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="P:BlueEngine.cUnityNetConnector.Client">
            <summary>
            클라이언트 객체.
            </summary>
        </member>
        <member name="P:BlueEngine.cUnityNetConnector.Clients">
            <summary>
            클라이언트 리스트(key:클라이언트ID)
            </summary>
        </member>
        <member name="P:BlueEngine.cUnityNetConnector.Channels">
            <summary>
            채널 리스트(key:채널ID)
            </summary>
        </member>
        <member name="P:BlueEngine.cUnityNetConnector.StagePartyCount">
            <summary>
            스테이지별 파티 개수(key:스테이지ID)
            </summary>
        </member>
        <member name="P:BlueEngine.cUnityNetConnector.Connected">
            <summary>
            접속중 플래그
            </summary>
        </member>
        <member name="T:BlueEngine.cBitCount">
            <summary>
            On 상태 비트수를 얻기 위한 객체.
            </summary>
        </member>
        <member name="M:BlueEngine.cBitCount.BitCount(System.SByte)">
            <summary>
            On비트개수 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>개수</returns>
        </member>
        <member name="M:BlueEngine.cBitCount.BitCount(System.Byte)">
            <summary>
            On비트개수 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>개수</returns>
        </member>
        <member name="M:BlueEngine.cBitCount.BitCount(System.Int16)">
            <summary>
            On비트개수 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>개수</returns>
        </member>
        <member name="M:BlueEngine.cBitCount.BitCount(System.UInt16)">
            <summary>
            On비트개수 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>개수</returns>
        </member>
        <member name="M:BlueEngine.cBitCount.BitCount(System.Int32)">
            <summary>
            On비트개수 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>개수</returns>
        </member>
        <member name="M:BlueEngine.cBitCount.BitCount(System.UInt32)">
            <summary>
            On비트개수 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>개수</returns>
        </member>
        <member name="M:BlueEngine.cBitCount.BitCount(System.Int64)">
            <summary>
            On비트개수 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>개수</returns>
        </member>
        <member name="M:BlueEngine.cBitCount.BitCount(System.UInt64)">
            <summary>
            On비트개수 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>개수</returns>
        </member>
        <member name="T:BlueEngine.cUserCharacter">
            <summary>
             유저 캐릭터 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.MAX_CHARACTER_ID">
            <summary>
            최대 캐릭터 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.MAX_INVEN_SLOT">
            <summary>
            최대 인벤 슬롯 번호
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.char_id">
            <summary>
            유저 캐릭터 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.name">
            <summary>
            캐릭터 이름
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.item_info_id">
            <summary>
            캐릭터 클래스
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.equip">
            <summary>
            장착 아이템 슬롯번호
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.inven">
            <summary>
            장착 아이템
            </summary>
        </member>
        <member name="M:BlueEngine.cUserCharacter.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:BlueEngine.cUserCharacter.#ctor(System.UInt64,System.String,System.UInt32)">
            <summary>
            생성자
            </summary>
            <param name="char_id">캐릭터 아이디</param>
            <param name="name">캐릭터 이름</param>
            <param name="item_info_id">아이템정보 아이디</param>
        </member>
        <member name="M:BlueEngine.cUserCharacter.ClearEquip">
            <summary>
            장착슬롯 비우기
            </summary>
        </member>
        <member name="T:BlueEngine.cUserCharacter.eClass">
            <summary>
            캐릭터 클래스
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eClass.Human">
            <summary>
            인간
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eClass.Vampire">
            <summary>
            뱀파이어
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eClass.Werewolf">
            <summary>
            늑대인간
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eClass.MAX_CLASS">
            <summary>
            최대값
            </summary>
        </member>
        <member name="T:BlueEngine.cUserCharacter.eEquipSlot">
            <summary>
            장착 슬롯
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.Hair">
            <summary>
            헤어
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.Skin">
            <summary>
            피부
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.Face">
            <summary>
            얼굴
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.Helm">
            <summary>
            투구,모자
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.Chast">
            <summary>
            상의
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.Legs">
            <summary>
            하의
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.Boots">
            <summary>
            신발
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.Gloves">
            <summary>
            장갑
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.Belt">
            <summary>
            벨트
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.Amulet">
            <summary>
            목걸이
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.Bracers">
            <summary>
            팔목
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.L_Ring">
            <summary>
            왼손 반지
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.R_Ring">
            <summary>
            오른손 반지
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.L_Weapon">
            <summary>
            왼손 무기
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.R_Weapon">
            <summary>
            오른손 무기
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.Costume">
            <summary>
            코스튬
            </summary>
        </member>
        <member name="F:BlueEngine.cUserCharacter.eEquipSlot.MAX_EQUIPSLOT">
            <summary>
            최대값
            </summary>
        </member>
        <member name="T:BlueEngine.cUserAccount2">
            <summary>
             유저 계정 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.MAX_ACCOUNT_ID">
            <summary>
            최대 계정 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.account_id">
            <summary>
            계정 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.guid">
            <summary>
            고유 아이디 (계정 생성시 사용됨)
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.email">
            <summary>
            이메일 주소
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.password">
            <summary>
            계정 비밀번호
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.neowiz_id">
            <summary>
            네오위즈 회원 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.fb_id">
            <summary>
            페이스북 회원 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.sig">
            <summary>
            시그니춰 코드
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.access">
            <summary>
            접근 권한
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.cash">
            <summary>
            캐쉬
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.max_char">
            <summary>
            최대 캐릭터 슬롯 수
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.active_char">
            <summary>
            현재 활성화된 캐릭터 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.access_time">
            <summary>
            최종 접근 시간
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.music">
            <summary>
            음악 볼륨 값
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.sound">
            <summary>
            사운드 볼륨 값
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.graphic">
            <summary>
            그래픽 퀄리티 값
            </summary>
        </member>
        <member name="F:BlueEngine.cUserAccount2.server_id">
            <summary>
            현재 접속한 서버 아이디
            </summary>
        </member>
        <member name="T:BlueEngine.cLog">
            <summary>
            로그 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cLog.s_header">
            <summary>
            로그 헤더 문자열.
            </summary>
        </member>
        <member name="F:BlueEngine.cLog.s_file_dump">
            <summary>
            파일로 덤프 플래그.
            </summary>
        </member>
        <member name="M:BlueEngine.cLog.Log(System.Object[])">
            <summary>
            로그 출력.
            </summary>
            <param name="values">데이터리스트</param>
        </member>
        <member name="M:BlueEngine.cLog.LogToString(System.Int32,System.Object[])">
            <summary>
            로그를 문자열로 얻음.
            </summary>
            <param name="stack_index">함수 추적을 위한 스택 깊이 단계.</param>
            <param name="values">데이터리스트</param>
        </member>
        <member name="M:BlueEngine.cLog.Dump(System.String)">
            <summary>
            파일로 메시지 덤프. 파일명 : 헤더.log
            </summary>
            <param name="message">메시지</param>
        </member>
        <member name="P:BlueEngine.cLog.Header">
            <summary>
            로그 헤더 문자열.
            </summary>
        </member>
        <member name="T:BlueEngine.cVector3">
            <summary>
            벡터3
            </summary>
        </member>
        <member name="F:BlueEngine.cVector3.EPSILON">
            <summary>
            최소 단위
            </summary>
        </member>
        <member name="F:BlueEngine.cVector3.x">
            <summary>
            x축 값
            </summary>
        </member>
        <member name="F:BlueEngine.cVector3.y">
            <summary>
            y축 값
            </summary>
        </member>
        <member name="F:BlueEngine.cVector3.z">
            <summary>
            z축 값
            </summary>
        </member>
        <member name="M:BlueEngine.cVector3.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:BlueEngine.cVector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            생성자
            </summary>
            <param name="x">x축값</param>
            <param name="y">y축값</param>
            <param name="z">z축값</param>
        </member>
        <member name="P:BlueEngine.cVector3.Zero">
            <summary>
            모든 축이 0으로 초기화된 값
            </summary>
        </member>
        <member name="T:BlueEngine.cCryptogram">
            <summary>
            암호화 객체 : 라인델(Rijndael) 알고리즘 사용.
            </summary>
        </member>
        <member name="F:BlueEngine.cCryptogram.SIZE_IV">
            <summary>
            초기화 벡터 크기.
            </summary>
        </member>
        <member name="F:BlueEngine.cCryptogram.SIZE_KEY">
            <summary>
            비밀키 크기.
            </summary>
        </member>
        <member name="M:BlueEngine.cCryptogram.EncryptString(System.String,System.String,System.String)">
            <summary>
            문자열 데이터 암호화
            </summary>
            <param name="data">데이터</param>
            <param name="iv">라인텔 알고리즘 초기화 벡터(16자)</param>
            <param name="key">라인텔 알고리즘 비밀키(32자)</param>
            <returns>암호화된 데이터</returns>
        </member>
        <member name="M:BlueEngine.cCryptogram.EncryptString(System.String,System.Byte[],System.Byte[])">
            <summary>
            문자열 데이터 암호화
            </summary>
            <param name="data">데이터</param>
            <param name="iv">라인텔 알고리즘 초기화 벡터(16바이트)</param>
            <param name="key">라인텔 알고리즘 비밀키(32바이트)</param>
            <returns>암호화된 데이터</returns>
        </member>
        <member name="M:BlueEngine.cCryptogram.Encrypt(System.Byte[],System.String,System.String)">
            <summary>
            바이너리 데이터 암호화
            </summary>
            <param name="data">데이터</param>
            <param name="iv">라인텔 알고리즘 초기화 벡터(Hex코드 16자)</param>
            <param name="key">라인텔 알고리즘 비밀키(Hex코드 32자)</param>
            <returns>암호화된 데이터</returns>
        </member>
        <member name="M:BlueEngine.cCryptogram.Encrypt(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            바이너리 데이터 암호화
            </summary>
            <param name="data">데이터</param>
            <param name="iv">라인텔 알고리즘 초기화 벡터(16바이트)</param>
            <param name="key">라인텔 알고리즘 비밀키(32바이트)</param>
            <returns>암호화된 데이터</returns>
        </member>
        <member name="M:BlueEngine.cCryptogram.DecryptString(System.String,System.String,System.String)">
            <summary>
            문자열 데이터 복호화
            </summary>
            <param name="data">암호화된 데이터</param>
            <param name="iv">라인텔 알고리즘 초기화 벡터(Hex코드 16자)</param>
            <param name="key">라인텔 알고리즘 비밀키(Hex코드 32자)</param>
            <returns>복호화된 데이터</returns>
        </member>
        <member name="M:BlueEngine.cCryptogram.DecryptString(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            문자열 데이터 복호화
            </summary>
            <param name="data">암호화된 데이터</param>
            <param name="iv">라인텔 알고리즘 초기화 벡터(16바이트)</param>
            <param name="key">라인텔 알고리즘 비밀키(32바이트)</param>
            <returns>복호화된 데이터</returns>
        </member>
        <member name="M:BlueEngine.cCryptogram.Decrypt(System.Byte[],System.Int32,System.String,System.String)">
            <summary>
            바이너리 데이터 복호화
            </summary>
            <param name="data">암호화된 데이터</param>
            <param name="data_size">암호화된 데이터 길이</param>
            <param name="iv">라인텔 알고리즘 초기화 벡터(Hex코드 16자)</param>
            <param name="key">라인텔 알고리즘 비밀키(Hex코드 32자)</param>
            <returns>복호화된 데이터</returns>
        </member>
        <member name="M:BlueEngine.cCryptogram.Decrypt(System.Byte[],System.Int32,System.Byte[],System.Byte[])">
            <summary>
            바이너리 데이터 복호화
            </summary>
            <param name="data">암호화된 데이터</param>
            <param name="data_size">암호화된 데이터 길이</param>
            <param name="iv">라인텔 알고리즘 초기화 벡터(16바이트)</param>
            <param name="key">라인텔 알고리즘 비밀키(32바이트)</param>
            <returns>복호화된 데이터</returns>
        </member>
        <member name="M:BlueEngine.cCryptogram.Hex2Bin(System.String)">
            <summary>
            HEX코드를 바이너리코드로 변환
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="M:BlueEngine.cCryptogram.Bin2Hex(System.Byte[])">
            <summary>
            바이너리코드를 HEX코드로 변환
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="T:BlueEngine.cConsole">
            <summary>
            콘솔 제어를 위한 객체
            </summary>
        </member>
        <member name="M:BlueEngine.cConsole.Write(System.String)">
            <summary>
            콘솔창에 메시지 출력.
            </summary>
            <param name="message">메시지.</param>
        </member>
        <member name="M:BlueEngine.cConsole.WriteColor(System.String,System.ConsoleColor,System.ConsoleColor)">
            <summary>
            콘솔창에 메시지 출력(칼라 지정 가능).
            </summary>
            <param name="message">메시지.</param>
            <param name="fcolor">글자색.</param>
            <param name="bcolor">배경색.</param>
        </member>
        <member name="T:BlueEngine.cDatabase">
            <summary>
            데이터베이스 오브젝트
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.MIN_CONNECTION_POOL_SIZE">
            <summary>
            커넥션 플링 사이즈(최소).
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.MAX_CONNECTION_POOL_SIZE">
            <summary>
            커넥션 플링 사이즈(최대).
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.m_address">
            <summary>
            데이터베이스 주소.
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.m_dbname">
            <summary>
            데이터베이스 이름.
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.m_id">
            <summary>
            데이터베이스 계정 아이디.
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.m_pw">
            <summary>
            데이터베이스 계정 비밀번호.
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.m_type">
            <summary>
            타입
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.m_connection">
            <summary>
            DB커넥션
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.m_command">
            <summary>
            DB커멘더
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.m_reader">
            <summary>
            데이터 리더
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.m_error">
            <summary>
            최근 에러메시지
            </summary>
        </member>
        <member name="M:BlueEngine.cDatabase.#ctor(BlueEngine.cDatabase.eType)">
            <summary>
            생성자
            </summary>
            <param name="type">타입</param>
        </member>
        <member name="M:BlueEngine.cDatabase.Finalize">
            <summary>
            파괴자
            </summary>
        </member>
        <member name="M:BlueEngine.cDatabase.Connect(System.String,System.String,System.String,System.String)">
            <summary>
            DB접속
            </summary>
            <param name="address">서버주소</param>
            <param name="dbname">DB명</param>
            <param name="id">ID</param>
            <param name="pw">PW</param>
        </member>
        <member name="M:BlueEngine.cDatabase.Connect">
            <summary>
            DB접속
            </summary>
        </member>
        <member name="M:BlueEngine.cDatabase.Query(System.String)">
            <summary>
            쿼리 요청 ( SELECT )
            </summary>
            <param name="sql">SQL문</param>
            <returns>성공 유무</returns>
        </member>
        <member name="M:BlueEngine.cDatabase.NonQuery(System.String)">
            <summary>
            쿼리 요청 ( UPDATE, INSERT, DELETE ... )
            </summary>
            <param name="sql">SQL문</param>
            <returns>성공 유무</returns>
        </member>
        <member name="M:BlueEngine.cDatabase.QueryProcedureStart(System.String)">
            <summary>
            쿼리 요청 시작 ( StoredProcedure )
            </summary>
            <param name="sql">SQL문</param>
            <returns>성공 유무</returns>
        </member>
        <member name="M:BlueEngine.cDatabase.AddInputParameter(System.String,System.Object,System.Object,System.Int32)">
            <summary>
            쿼리 파라메타 추가 : 입력
            </summary>
            <param name="name">필드명</param>
            <param name="value">데이터</param>
            <param name="type">데이터타입</param>
            <param name="size">데이터크기(bytes)</param>
        </member>
        <member name="M:BlueEngine.cDatabase.AddOutputParameter(System.String,System.Object,System.Int32)">
            <summary>
            쿼리 파라메타 추가 : 출력
            </summary>
            <param name="name">필드명</param>
            <param name="type">데이터타입</param>
            <param name="size">데이터크기(bytes)</param>
        </member>
        <member name="M:BlueEngine.cDatabase.QueryProcedureEnd">
            <summary>
            쿼리 요청 종료( StoredProcedure )
            </summary>
            <returns>성공 유무</returns>
        </member>
        <member name="M:BlueEngine.cDatabase.CreateAdapter(System.String)">
            <summary>
            아답터 생성
            </summary>
            <param name="table_name">테이블 이름</param>
            <returns>데이터어답터 객체</returns>
        </member>
        <member name="M:BlueEngine.cDatabase.ReadTable(System.Data.DataTable,System.String)">
            <summary>
            테이블 읽기
            </summary>
            <param name="table">테이블 객체</param>
            <param name="sql">SQL문</param>
            <returns>데이터어답터 객체</returns>
        </member>
        <member name="M:BlueEngine.cDatabase.UpdateTable(System.Data.DataTable,System.Data.Common.DbDataAdapter)">
            <summary>
            테이블 갱신(INSERT,UPDATE,DELETE...)
            </summary>
            <param name="table">테이블 객체</param>
            <param name="adapter">어답터</param>
            <returns>성공유무</returns>
        </member>
        <member name="M:BlueEngine.cDatabase.CloseQuery">
            <summary>
            쿼리 종료
            </summary>
        </member>
        <member name="M:BlueEngine.cDatabase.Close">
            <summary>
            커넥션 종료
            </summary>
        </member>
        <member name="M:BlueEngine.cDatabase.ReadSample">
            <summary>
            예제
            </summary>
        </member>
        <member name="P:BlueEngine.cDatabase.Reader">
            <summary>
            데이터 리더
            </summary>
        </member>
        <member name="P:BlueEngine.cDatabase.Connection">
            <summary>
            DB 커넥션
            </summary>
        </member>
        <member name="T:BlueEngine.cDatabase.eType">
            <summary>
            타입
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.eType.SQLite">
            <summary>
            SQLite
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.eType.MySQL">
            <summary>
            MySQL
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.eType.MSSQL">
            <summary>
            MSSQL
            </summary>
        </member>
        <member name="F:BlueEngine.cDatabase.eType.Oracle">
            <summary>
            Oracle
            </summary>
        </member>
        <member name="T:BlueEngine.cNetwork">
            <summary>
            네트워크 베이스 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.VERSION">
            <summary>
            네트워크 버전
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.MAX_ACCOUNT_ID">
            <summary>
            최대 유저 계정 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.MAX_ACTOR_TARGET">
            <summary>
            최대 동시 타겟 액터 수
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.MAX_DAMAGE">
            <summary>
            최대 데미지
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.MAX_OBJECT_ID">
            <summary>
            최대 오브젝트 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.m_short_name">
            <summary>
            짧은 이름
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.m_port">
            <summary>
            소켓 포트 번호
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.m_recv_buf_size">
            <summary>
            읽기 버퍼 길이
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.m_use_cryptogram">
            <summary>
            데이터 암호화 사용 플래그
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.s_data_iv_hex">
            <summary>
            데이터 암호화 초기화 벡터(HEX코드)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.m_data_iv_hex">
            <summary>
            데이터 암호화 초기화 벡터(HEX코드)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.s_data_key_hex">
            <summary>
            데이터 암호화 비밀키(HEX코드)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.m_data_key_hex">
            <summary>
            데이터 암호화 비밀키(HEX코드)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.s_data_iv">
            <summary>
            데이터 암호화 초기화 벡터
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.m_data_iv">
            <summary>
            데이터 암호화 초기화 벡터
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.s_data_key">
            <summary>
            데이터 암호화 비밀키
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.m_data_key">
            <summary>
            데이터 암호화 비밀키
            </summary>
        </member>
        <member name="M:BlueEngine.cNetwork.SetCryptogram(System.String,System.String)">
            <summary>
            암호화 키 세팅
            </summary>
        </member>
        <member name="M:BlueEngine.cNetwork.SetDataKey(System.String,System.String)">
            <summary>
            데이터 암호화 키 세팅
            </summary>
        </member>
        <member name="M:BlueEngine.cNetwork.#ctor">
            <summary>
            기본 생성자.
            </summary>
        </member>
        <member name="M:BlueEngine.cNetwork.#ctor(System.String,System.String)">
            <summary>
            생성자.
            </summary>
            <param name="name">이름.</param>
            <param name="short_name">짧은 이름.</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteOrder(BlueEngine.cBitStream,BlueEngine.cNetwork.eOrder)">
            <summary>
            데이터 쓰기(명령코드)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteResult(BlueEngine.cBitStream,BlueEngine.cNetwork.eResult)">
            <summary>
            데이터 쓰기(결과코드)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteString(BlueEngine.cBitStream,System.String)">
            <summary>
            데이터 쓰기(문자열)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteFlag(BlueEngine.cBitStream,System.Boolean)">
            <summary>
            데이터 쓰기(플래그)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteClientId(BlueEngine.cBitStream,System.UInt32)">
            <summary>
            데이터 쓰기(클라이언트ID)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteClientCount(BlueEngine.cBitStream,System.Int16)">
            <summary>
            데이터 쓰기(클라이언트수)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteAccountId(BlueEngine.cBitStream,System.UInt64)">
            <summary>
            데이터 쓰기(계정ID)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteChannelCount(BlueEngine.cBitStream,System.Byte)">
            <summary>
            데이터 쓰기(채널 개수)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteChannelId(BlueEngine.cBitStream,System.UInt32)">
            <summary>
            데이터 쓰기(채널ID)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteChannelUserCount(BlueEngine.cBitStream,System.UInt16)">
            <summary>
            데이터 쓰기(채널 유저수)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WritePartyCount(BlueEngine.cBitStream,System.UInt16)">
            <summary>
            데이터 쓰기(파티 개수)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WritePartyId(BlueEngine.cBitStream,System.UInt32)">
            <summary>
            데이터 쓰기(파티ID)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WritePartyUserCount(BlueEngine.cBitStream,System.Byte)">
            <summary>
            데이터 쓰기(파티 유저수)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteStageCount(BlueEngine.cBitStream,System.UInt16)">
            <summary>
            데이터 쓰기(스테이지 개수)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteStageId(BlueEngine.cBitStream,System.UInt32)">
            <summary>
            데이터 쓰기(스테이지ID)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteMonsterId(BlueEngine.cBitStream,System.UInt16)">
            <summary>
            데이터 쓰기(몬스터ID)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteMonsterInfoId(BlueEngine.cBitStream,System.UInt32)">
            <summary>
            데이터 쓰기(몬스터정보ID)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteTriggerId(BlueEngine.cBitStream,System.UInt16)">
            <summary>
            데이터 쓰기(트리거ID)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteSkillId(BlueEngine.cBitStream,System.UInt16)">
            <summary>
            데이터 쓰기(스킬ID)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteItemId(BlueEngine.cBitStream,System.UInt64)">
            <summary>
            데이터 쓰기(아이템ID)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteItemInfoId(BlueEngine.cBitStream,System.UInt32)">
            <summary>
            데이터 쓰기(아이템인포ID)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteItemInfoIds(BlueEngine.cBitStream,System.UInt32[])">
            <summary>
            데이터 쓰기(아이템인포ID)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteStagePos(BlueEngine.cBitStream,BlueEngine.cVector3)">
            <summary>
            데이터 쓰기(스테이지 위치)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="pos">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteDamage(BlueEngine.cBitStream,System.UInt32)">
            <summary>
            데이터 쓰기(데미지)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.WriteSkillTargetCount(BlueEngine.cBitStream,System.Byte)">
            <summary>
            데이터 쓰기(스킬타겟개수)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="value">데이터</param>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadOrder(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(명령코드)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadResult(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(결과코드)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadString(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(문자열)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadFlag(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(플래그)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadClientId(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(클라이언트ID)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadClientCount(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(클라이언트수)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadAccountId(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(계정ID)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadChannelCount(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(채널개수)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadChannelId(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(채널아이디)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadChannelUserCount(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(채널유저수)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadPartyCount(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(파티개수)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadPartyId(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(파티ID)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadPartyUserCount(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(파티유저수)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadStageCount(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(스테이지개수)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadStageId(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(스테이지ID)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadMonsterId(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(몬스터ID)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadMonsterInfoId(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(몬스터정보ID)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadTriggerId(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(트리거ID)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadSkillId(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(스킬ID)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadItemId(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(아이템ID)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadItemInfoId(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(아이템인포ID)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadItemInfoIds(BlueEngine.cBitStream,System.Byte)">
            <summary>
            데이터 읽기(아이템인포ID)
            </summary>
            <param name="bits">비트스트림</param>
            <param name="count">개수</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadStagePos(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(스테이지 위치)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadDamage(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(데미지)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.ReadSkillTargetCount(BlueEngine.cBitStream)">
            <summary>
            데이터 읽기(스킬타겟개수)
            </summary>
            <param name="bits">비트스트림</param>
            <returns>읽어온 데이터</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.Exception">
            <summary>
            예외처리를 위한 예외를 발생 시킨다.
            </summary>
            <returns>예외처리 객체.</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.Exception(System.Object[])">
            <summary>
            예외처리를 위한 예외를 발생 시킨다.
            </summary>
            <param name="values">데이터리스트.</param>
            <returns>예외처리 객체.</returns>
        </member>
        <member name="M:BlueEngine.cNetwork.Log(System.Object[])">
            <summary>
            메시지 로그를 기록한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cNetwork.Print(System.Object[])">
            <summary>
            메시지를 콘솔창에 출력 한다.
            </summary>
            <param name="values">데이터리스트</param>
        </member>
        <member name="M:BlueEngine.cNetwork.Error(System.Object[])">
            <summary>
            에러메시지를 콘솔창에 출력 한다.
            </summary>
            <param name="values">데이터리스트</param>
        </member>
        <member name="P:BlueEngine.cNetwork.ShortName">
            <summary>
            짧은 이름
            </summary>
        </member>
        <member name="P:BlueEngine.cNetwork.Port">
            <summary>
            소켓 포트 번호
            </summary>
        </member>
        <member name="P:BlueEngine.cNetwork.RecvBufSize">
            <summary>
            수신 버퍼 길이
            </summary>
        </member>
        <member name="P:BlueEngine.cNetwork.UseCryptogram">
            <summary>
            데이터 암호화 사용 플래그
            </summary>
        </member>
        <member name="P:BlueEngine.cNetwork.DataIV">
            <summary>
            데이터 암호화 초기화 벡터
            </summary>
        </member>
        <member name="P:BlueEngine.cNetwork.DataKey">
            <summary>
            로그인 암호화 비밀키
            </summary>
        </member>
        <member name="T:BlueEngine.cNetwork.eOrder">
            <summary>
            네트워크 명령어
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.UNKNOWN">
            <summary>
            알려지지 않은 명령
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.SERVER_LOGIN">
            <summary>
            서버 : 로그인
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.SERVER_IN">
            <summary>
            서버 : 입장
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.SERVER_OUT">
            <summary>
            서버 : 퇴장
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.CLIENT_INFO_DEFAULT">
            <summary>
            클라이언트 : 정보 : 기본
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.CLIENT_INFO_DETAIL">
            <summary>
            클라이언트 : 정보 : 상세
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.CHANNEL_LIST">
            <summary>
            채널 : 리스트
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.CHANNEL_ADD">
            <summary>
            채널 : 생성 : (관리자 권한 필요)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.CHANNEL_SUB">
            <summary>
            채널 : 삭제 : (관리자 권한 필요)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.CHANNEL_IN">
            <summary>
            채널 : 입장
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.CHANNEL_OUT">
            <summary>
            채널 : 퇴장
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.CHANNEL_CHAT">
            <summary>
            채널 : 채팅
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.PARTY_LIST">
            <summary>
            파티 : 리스트 (미사용)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.PARTY_COUNT_STAGE">
            <summary>
            파티 : 개수 : 스테이지
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.PARTY_ADD">
            <summary>
            파티 : 추가 (미사용)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.PARTY_SUB">
            <summary>
            파티 : 삭제 (미사용)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.PARTY_IN">
            <summary>
            파티 : 입장 (미사용)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.PARTY_OUT">
            <summary>
            파티 : 퇴장 (미사용)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.PARTY_CHAT">
            <summary>
            파티 : 채팅
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_LIST">
            <summary>
            스테이지 : 리스트
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_IN_REQUEST">
            <summary>
            스테이지 : 입장 : 요청
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_IN_ACCEPT">
            <summary>
            스테이지 : 입장 : 승락
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_USER_IN">
            <summary>
            스테이지 : 유저 : 입장
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_USER_OUT">
            <summary>
            스테이지 : 유저 : 퇴장
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_USER_MOVE">
            <summary>
            스테이지 : 유저 : 이동
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_USER_ATTACK_MONSTER">
            <summary>
            스테이지 : 유저 : 공격 : 몬스터
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_USER_SKILL_SELF">
            <summary>
            스테이지 : 유저 : 스킬 사용 : 자신
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_USER_SKILL_MONSTER">
            <summary>
            스테이지 : 유저 : 스킬 사용 : 몬스터
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_USER_SKILL_POS">
            <summary>
            스테이지 : 유저 : 스킬 사용 : 좌표
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_USER_DAMAGE">
            <summary>
            스테이지 : 유저 : 데미지
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_USER_ITEM_USE_SELF">
            <summary>
            스테이지 : 유저 : 아이템 사용 : 자신
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_USER_TRIGGER_ON">
            <summary>
            스테이지 : 유저 : 트리거 ON
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_MON_IN">
            <summary>
            스테이지 : 몬스터 : 입장 : (파티장 권한 필요)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_MON_MOVE">
            <summary>
            스테이지 : 몬스터 : 이동 : (파티장 권한 필요)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_MON_ATTACK_USER">
            <summary>
            스테이지 : 몬스터 : 공격 : 유저 : (파티장 권한 필요)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_MON_SKILL_SELF">
            <summary>
            스테이지 : 몬스터 : 스킬 사용 : 자신 : (파티장 권한 필요)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_MON_SKILL_ACTOR">
            <summary>
            스테이지 : 몬스터 : 스킬 사용 : 유저 : (파티장 권한 필요)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_MON_SKILL_POS">
            <summary>
            스테이지 : 몬스터 : 스킬 사용 : 좌표 : (파티장 권한 필요)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_MON_DAMAGE">
            <summary>
            스테이지 : 몬스터 : 데미지 : (파티장 권한 필요)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.STAGE_DATA">
            <summary>
            스테이지 : 커스텀데이터
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.OBJECT_CREATE">
            <summary>
            오브젝트 생성
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.OBJECT_DELETE">
            <summary>
            오브젝트 삭제
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.OBJECT_UPDATE">
            <summary>
            오브젝트 변형
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eOrder.MAX_ORDER">
            <summary>
            최대값
            </summary>
        </member>
        <member name="T:BlueEngine.cNetwork.eResult">
            <summary>
            네트워크 결과값 정의
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.UNKNOWN">
            <summary>
            알려지지 않은 결과
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_NETWORK_VERSION">
            <summary>
            실패 : 네트워크 : 버전
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_CLIENT_VERSION">
            <summary>
            실패 : 클라이언트 : 버전
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_PARAM0">
            <summary>
            파라메타 오류
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_PARAM1">
            <summary>
            파라메타 오류
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_PARAM2">
            <summary>
            파라메타 오류
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_PARAM3">
            <summary>
            파라메타 오류
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_PARAM4">
            <summary>
            파라메타 오류
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_PARAM5">
            <summary>
            파라메타 오류
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_PARAM6">
            <summary>
            파라메타 오류
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_PARAM7">
            <summary>
            파라메타 오류
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_PARAM8">
            <summary>
            파라메타 오류
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_PARAM9">
            <summary>
            파라메타 오류
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_SERVER_LOGIN_REFUSE">
            <summary>
            실패 : 서버 : 로그인 : 다중 접속
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_CLIENT_CONNECT_SERVER_POLICY">
            <summary>
            실패 : 클라이언트 : 접속 : Policy서버
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_CLIENT_CONNECT_SERVER_GAME">
            <summary>
            실패 : 클라이언트 : 접속 : 게임서버
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_CLIENT_ID">
            <summary>
            실패 : 클라이언트 : ID
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_CHANNEL_MAX_CHANNEL">
            <summary>
            실패 : 채널 : 최대 채널 개수 초과
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_CHANNEL_MAX_USER">
            <summary>
            실패 : 채널 : 최대 유저수 초과
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_CHANNEL_FIND_FAIL">
            <summary>
            실패 : 채널 : 채널 찾기 실패.
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_CHANNEL_IN_USER">
            <summary>
            실패 : 채널 : 채널에 이미 입장되어 있음.
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_PARTY_MAX_PARTY">
            <summary>
            실패: 파티 : 최대 파티 개수 초과
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_PARTY_MAX_USER">
            <summary>
            실패: 파티 : 최대 유저수 초과
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_PARTY_FIND_FAIL">
            <summary>
            실패: 파티 : 파티 찾기 실패.
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.FAIL_PARTY_IN_USER">
            <summary>
            실패 : 파티 : 파티에 이미 입장되어 있음.
            </summary>
        </member>
        <member name="F:BlueEngine.cNetwork.eResult.MAX_RESULT">
            <summary>
            최대값
            </summary>
        </member>
        <member name="T:BlueEngine.cDBField">
            <summary>
             데이터베이스 필드 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cDBField.m_name">
            <summary>
            필드명
            </summary>
        </member>
        <member name="F:BlueEngine.cDBField.m_value">
            <summary>
            데이터
            </summary>
        </member>
        <member name="F:BlueEngine.cDBField.m_modify">
            <summary>
            데이터 변경 플래그
            </summary>
        </member>
        <member name="M:BlueEngine.cDBField.#ctor(System.String,System.Object)">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:BlueEngine.cDBField.GetQueryValue">
            <summary>
            데이터베이스 쿼리에 사용될 값 얻기
            </summary>
        </member>
        <member name="P:BlueEngine.cDBField.Name">
            <summary>
            필드명
            </summary>
        </member>
        <member name="P:BlueEngine.cDBField.Value">
            <summary>
            데이터
            </summary>
        </member>
        <member name="P:BlueEngine.cDBField.Modify">
            <summary>
            데이터 변경 플래그
            </summary>
        </member>
        <member name="T:BlueEngine.cNetConnector">
            <summary>
            네트워크 커넥터
            </summary>
        </member>
        <member name="F:BlueEngine.cNetConnector.s_version">
            <summary>
            클라이언트 버전
            </summary>
        </member>
        <member name="F:BlueEngine.cNetConnector.s_thread_connect">
            <summary>
            접속 쓰레드.
            </summary>
        </member>
        <member name="F:BlueEngine.cNetConnector.s_mutex">
            <summary>
            뮤텍스.
            </summary>
        </member>
        <member name="F:BlueEngine.cNetConnector.s_client">
            <summary>
            클라이언트 객체.
            </summary>
        </member>
        <member name="F:BlueEngine.cNetConnector.s_server_address">
            <summary>
            서버 주소.
            </summary>
        </member>
        <member name="F:BlueEngine.cNetConnector.s_server_port">
            <summary>
            서버 포트.
            </summary>
        </member>
        <member name="F:BlueEngine.cNetConnector.s_recv_buf_size">
            <summary>
            수신 버퍼 크기.
            </summary>
        </member>
        <member name="F:BlueEngine.cNetConnector.s_policy_port">
            <summary>
            Polity 서버 포트.
            </summary>
        </member>
        <member name="F:BlueEngine.cNetConnector.s_use_cryptogram">
            <summary>
            패킷 암호화 사용 플래그.
            </summary>
        </member>
        <member name="F:BlueEngine.cNetConnector.s_clients">
            <summary>
            클라이언트 리스트(key:클라이언트ID)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetConnector.s_channels">
            <summary>
            채널 리스트(key:채널ID)
            </summary>
        </member>
        <member name="F:BlueEngine.cNetConnector.s_stage_party_count">
            <summary>
            스테이지별 파티 개수(key:스테이지ID)
            </summary>
        </member>
        <member name="M:BlueEngine.cNetConnector.#ctor(System.String,System.String,System.UInt16,System.UInt16,System.Boolean)">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:BlueEngine.cNetConnector.Finalize">
            <summary>
            파괴자
            </summary>
        </member>
        <member name="M:BlueEngine.cNetConnector.OnApplicationQuit">
            <summary>
            어플리케이션 종료.
            주의: 프로그램 종료될때 메인 프로세스에서 호출해줘야 한다.
            </summary>
        </member>
        <member name="M:BlueEngine.cNetConnector.ThreadConnect(System.Object)">
            <summary>
            접속 쓰레드
            </summary>
        </member>
        <member name="M:BlueEngine.cNetConnector.Loop">
            <summary>
            루프 (외부에서 호출이 필요함).
            </summary>
        </member>
        <member name="M:BlueEngine.cNetConnector.MainLoop">
            <summary>
            메인 루프.
            </summary>
        </member>
        <member name="M:BlueEngine.cNetConnector.AddClient(System.UInt32,BlueEngine.cClient)">
            <summary>
            클라이언트 추가.
            </summary>
            <param name="id">클라이언트 아이디.</param>
            <param name="value">클라이언트 인스턴스.</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RemoveClient(System.UInt32)">
            <summary>
            클라이언트 삭제.
            </summary>
            <param name="id">클라이언트 아이디.</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RemoveAllClient">
            <summary>
            클라이언트 모두 삭제.
            </summary>
        </member>
        <member name="M:BlueEngine.cNetConnector.GetClient(System.UInt32,BlueEngine.cClient@)">
            <summary>
            클라이언트를 얻어온다.
            </summary>
            <param name="id">클라이언트 아이디.</param>
            <param name="value">클라이언트 객체.</param>
            <returns>성공 유무.</returns>
        </member>
        <member name="M:BlueEngine.cNetConnector.AddChannel(System.Byte,BlueEngine.cChannel)">
            <summary>
            채널 추가.
            </summary>
            <param name="id">채널 아이디.</param>
            <param name="value">채널 인스턴스.</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RemoveChannel(System.Byte)">
            <summary>
            채널 삭제.
            </summary>
            <param name="id">채널 아이디.</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RemoveAllChannel">
            <summary>
            채널 모두 삭제.
            </summary>
        </member>
        <member name="M:BlueEngine.cNetConnector.GetChannel(System.Byte,BlueEngine.cChannel@)">
            <summary>
            채널를 얻어온다.
            </summary>
            <param name="id">채널 아이디.</param>
            <param name="value">[출력]채널 객체.</param>
            <returns>성공 유무.</returns>
        </member>
        <member name="M:BlueEngine.cNetConnector.SetStagePartyCount(System.UInt32,System.UInt16)">
            <summary>
            스테이지 파티 카운트 입력.
            </summary>
            <param name="id">스테이지 아이디.</param>
            <param name="party_count">파티 개수.</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RemoveAllStagePartyCount">
            <summary>
            스테이지 파티 카운트 모두 삭제.
            </summary>
        </member>
        <member name="M:BlueEngine.cNetConnector.Exception">
            <summary>
            예외처리를 위한 예외를 발생 시킨다.
            </summary>
            <returns>예외처리 객체.</returns>
        </member>
        <member name="M:BlueEngine.cNetConnector.Exception(System.Object[])">
            <summary>
            예외처리를 위한 예외를 발생 시킨다.
            </summary>
            <param name="values">데이터리스트.</param>
            <returns>예외처리 객체.</returns>
        </member>
        <member name="M:BlueEngine.cNetConnector.Log(System.Object[])">
            <summary>
            메시지 로그를 기록한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.Print(System.Object[])">
            <summary>
            메시지를 콘솔창에 출력 한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.Error(System.Object[])">
            <summary>
            에러메시지를 콘솔창에 출력 한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.DoRecv(BlueEngine.cClient,System.Byte[],System.Int32)">
            <summary>
            데이터 수신 처리
            </summary>
            <param name="client">cClient 인스턴스</param>
            <param name="data">수신 데이터</param>
            <param name="size">수신 데이터 크기</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.OnRecv(BlueEngine.cClient,System.Byte[],System.Int32)">
            <summary>
            데이터 수신 처리
            </summary>
            <param name="client">cClient 인스턴스</param>
            <param name="data">수신 데이터</param>
            <param name="size">수신 데이터 크기</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvServerLogin(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 서버 : 로그인
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvServerIn(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 서버 : 입장
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvServerOut(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 서버 : 퇴장
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvClientInfoDefault(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 클라이언트 : 정보 : 기본
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvChannelList(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 채널 : 리스트
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvChannelIn(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 채널 : 입장
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvChannelOut(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 채널 : 퇴장
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvChannelChat(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 채널 : 채팅
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvPartyChat(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 파티 : 채팅.
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageList(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 리스트
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageInRequest(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 입장 : 요청
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageInAccept(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 입장 : 승락
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageUserIn(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 입장
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageUserOut(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 퇴장
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageUserMove(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 이동
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageUserAttackMonster(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 공격 : 몬스터
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageUserSkillSelf(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 스킬 사용 : 자신
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageUserSkillMonster(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 스킬 사용 : 몬스터
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageUserSkillPos(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 스킬 사용 : 좌표
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageUserDemage(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 데미지
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageUserItemUseSelf(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 아이템 사용 : 자신
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageUserTriggerOn(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 유저 : 트리거 작동
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageMonIn(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지  : 몬스터 : 입장 : (파티장 권한 필요)
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageMonMove(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지  : 몬스터 : 이동 : (파티장 권한 필요)
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageMonAttackUser(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 몬스터 : 공격 : 유저 : (파티장 권한 필요)
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageMonSkillSelf(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 몬스터 : 스킬 사용 : 자신 : (파티장 권한 필요)
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageMonSkillUser(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 몬스터 : 스킬 사용 : 유저 : (파티장 권한 필요)
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageMonSkillPos(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 몬스터 : 스킬 사용 : 좌표 : (파티장 권한 필요)
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageMonDemage(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 몬스터 : 데미지 : (파티장 권한 필요)
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cNetConnector.RecvStageData(BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            수신 : 스테이지 : 커스텀 데이터
            </summary>
            <param name="result">수신 결과코드</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="P:BlueEngine.cNetConnector.Client">
            <summary>
            클라이언트 객체.
            </summary>
        </member>
        <member name="P:BlueEngine.cNetConnector.Clients">
            <summary>
            클라이언트 리스트(key:클라이언트ID)
            </summary>
        </member>
        <member name="P:BlueEngine.cNetConnector.Channels">
            <summary>
            채널 리스트(key:채널ID)
            </summary>
        </member>
        <member name="P:BlueEngine.cNetConnector.StagePartyCount">
            <summary>
            스테이지별 파티 개수(key:스테이지ID)
            </summary>
        </member>
        <member name="P:BlueEngine.cNetConnector.Connected">
            <summary>
            접속중 플래그
            </summary>
        </member>
        <member name="T:BlueEngine.cTime">
            <summary>
            시간 제어를 위한 객체.
            </summary>
        </member>
        <member name="M:BlueEngine.cTime.Now">
            <summary>
            현재 로컬 시간을 얻는다.
            </summary>
            <returns>현재 로컬 시간.</returns>
        </member>
        <member name="M:BlueEngine.cTime.UnixNow">
            <summary>
            현재 유닉스 시간을 얻는다.(UTC+00:00)
            </summary>
            <returns>현재 유닉스 시간.</returns>
        </member>
        <member name="T:BlueEngine.cBitSize">
            <summary>
            비트길이를 얻기 위한 객체.
            </summary>
        </member>
        <member name="M:BlueEngine.cBitSize.BitSize(System.SByte)">
            <summary>
            비트길이 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>길이</returns>
        </member>
        <member name="M:BlueEngine.cBitSize.BitSize(System.Byte)">
            <summary>
            비트길이 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>길이</returns>
        </member>
        <member name="M:BlueEngine.cBitSize.BitSize(System.Int16)">
            <summary>
            비트길이 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>길이</returns>
        </member>
        <member name="M:BlueEngine.cBitSize.BitSize(System.UInt16)">
            <summary>
            비트길이 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>길이</returns>
        </member>
        <member name="M:BlueEngine.cBitSize.BitSize(System.Int32)">
            <summary>
            비트길이 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>길이</returns>
        </member>
        <member name="M:BlueEngine.cBitSize.BitSize(System.UInt32)">
            <summary>
            비트길이 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>길이</returns>
        </member>
        <member name="M:BlueEngine.cBitSize.BitSize(System.Int64)">
            <summary>
            비트길이 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>길이</returns>
        </member>
        <member name="M:BlueEngine.cBitSize.BitSize(System.UInt64)">
            <summary>
            비트길이 얻기
            </summary>
            <param name="n">데이터</param>
            <returns>길이</returns>
        </member>
        <member name="M:BlueEngine.cBitSize.BitSize(System.Single,System.Int32)">
            <summary>
            비트길이 얻기.
            주위 : 값이 너무 크거나 소숫점 자리수가 크면 값이 오버될 수 있다.
            </summary>
            <param name="n">데이터</param>
            <param name="point">소숫점 자릿수</param>
            <returns>길이</returns>
        </member>
        <member name="M:BlueEngine.cBitSize.BitSize(System.Double,System.Int32)">
            <summary>
            비트길이 얻기.
            주위 : 값이 너무 크거나 소숫점 자리수가 크면 값이 오버될 수 있다.
            </summary>
            <param name="n">데이터</param>
            <param name="point">소숫점 자릿수</param>
            <returns>길이</returns>
        </member>
        <member name="T:BlueEngine.cTrigger">
            <summary>
            트리거 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cTrigger.MAX_TRIGGER_ID">
            <summary>
            최대 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cTrigger.m_trigger_id">
            <summary>
            트리거 아이디
            </summary>
        </member>
        <member name="P:BlueEngine.cTrigger.TriggerID">
            <summary>
            트리거 아이디
            </summary>
        </member>
        <member name="T:BlueEngine.cMonster">
            <summary>
            몬스터 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cMonster.MAX_MONSTER_ID">
            <summary>
            최대 몬스터 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cMonster.MAX_MONSTER_INFO_ID">
            <summary>
            최대 몬스터 정보 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cMonster.m_monster_id">
            <summary>
            몬스터 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cMonster.m_monster_info_id">
            <summary>
            몬스터 정보 아이디
            </summary>
        </member>
        <member name="M:BlueEngine.cMonster.#ctor(System.UInt16,System.UInt32)">
            <summary>
            생성자
            </summary>
            <param name="monster_id">몬스터 아이디</param>
            <param name="monster_info_id">몬스터 정보 아이디</param>
        </member>
        <member name="P:BlueEngine.cMonster.MonsterID">
            <summary>
            몬스터 아이디
            </summary>
        </member>
        <member name="P:BlueEngine.cMonster.MonsterInfoID">
            <summary>
            몬스터 아이디
            </summary>
        </member>
        <member name="T:BlueEngine.cChannel">
            <summary>
            채널 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cChannel.MAX_CHANNEL_ID">
            <summary>
            최대 채널 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cChannel.s_max_user">
            <summary>
            채널 최대 수용 인원
            </summary>
        </member>
        <member name="F:BlueEngine.cChannel.s_channel_id">
            <summary>
            채널 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cChannel.m_channel_id">
            <summary>
            채널 아이디
            </summary>
        </member>
        <member name="M:BlueEngine.cChannel.#ctor(System.Byte)">
            <summary>
            생성자
            </summary>
            <param name="channel_id">채널 아이디</param>
        </member>
        <member name="M:BlueEngine.cChannel.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:BlueEngine.cChannel.AddClient(BlueEngine.cClient)">
            <summary>
            클라이언트 추가
            </summary>
            <param name="client">클라이언트 객체</param>
        </member>
        <member name="M:BlueEngine.cChannel.RemoveClient(BlueEngine.cClient)">
            <summary>
            클라이언트 삭제
            </summary>
            <param name="client">클라이언트 객체</param>
        </member>
        <member name="M:BlueEngine.cChannel.GetClient(System.UInt32)">
            <summary>
            클라이언트 얻기
            </summary>
            <param name="client_id">클라이언트 아이디</param>
        </member>
        <member name="P:BlueEngine.cChannel.MaxUser">
            <summary>
            최대 유저수
            </summary>
        </member>
        <member name="P:BlueEngine.cChannel.MaxChannel">
            <summary>
            최대 채널 개수 ( 서버 최대 수용 인원 / 최대 채널 유저수 )
            </summary>
        </member>
        <member name="P:BlueEngine.cChannel.UniqueChannelID">
            <summary>
            새로운 유니크한 아이디를 얻는다.
            </summary>
        </member>
        <member name="P:BlueEngine.cChannel.ChannelID">
            <summary>
            채널 아이디
            </summary>
        </member>
        <member name="T:BlueEngine.cPolicyClient">
            <summary>
            문자열 전용 클라이언트 객체.
            </summary>
        </member>
        <member name="T:BlueEngine.cClient">
            <summary>
            네트워크 클라이언트 객체.
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.MAX_CLIENT_ID">
            <summary>
            최대 클라이언트 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.MAX_RECV_BUFFER">
            <summary>
            최대 누적된 수신 버퍼 크기
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.m_client">
            <summary>
            TCP 클라이언트 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.m_client_id">
            <summary>
            클라이언트 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.m_recv_buffer">
            <summary>
            수신 데이터 버퍼
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.m_total_recv_buffer">
            <summary>
            수신 데이터 누적 버퍼
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.m_total_recv_buffer_pos">
            <summary>
            수신 데이터 누적 버퍼 포지션
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.m_recv_head">
            <summary>
            수신 데이터 헤드
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.m_channel">
            <summary>
            채널 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.m_party">
            <summary>
            파티 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.m_master">
            <summary>
            파티장 플래그
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.m_stage">
            <summary>
            스테이지 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.m_user_account">
            <summary>
            유저 계정
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.m_user_character">
            <summary>
            유저 캐릭터
            </summary>
        </member>
        <member name="F:BlueEngine.cClient.m_sync_cobject">
            <summary>
            동기화할 cObject 리스트(미사용)
            </summary>
        </member>
        <member name="M:BlueEngine.cClient.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:BlueEngine.cClient.#ctor(System.UInt32,System.UInt16,System.Boolean,BlueEngine.EventRecv)">
            <summary>
            생성자
            </summary>
            <param name="client_id">클라이언트 아이디</param>
            <param name="recv_buf_size">수신버퍼 크기</param>
            <param name="use_cryptogram">패킷암호화 사용 유무</param>
            <param name="event_recv">수신 이벤트 콜백 함수</param>
        </member>
        <member name="M:BlueEngine.cClient.#ctor(System.UInt32,System.Net.Sockets.TcpClient,System.UInt16,System.Boolean,BlueEngine.EventRecv)">
            <summary>
            생성자
            </summary>
            <param name="client_id">클라이언트 아이디</param>
            <param name="client">TcpClient 인스턴스</param>
            <param name="recv_buf_size">수신 버퍼 크기</param>
            <param name="use_cryptogram">패킷암호화 사용 유무</param>
            <param name="event_recv">수신 이벤트 콜백 함수</param>
        </member>
        <member name="M:BlueEngine.cClient.#ctor(System.UInt32,System.String,System.UInt16,System.UInt16,System.Boolean,BlueEngine.EventRecv)">
            <summary>
            생성자
            </summary>
            <param name="client_id">클라이언트 아이디</param>
            <param name="address">서버 주소</param>
            <param name="port">서버 포트번호</param>
            <param name="recv_buf_size">수신 버퍼 크기</param>
            <param name="use_cryptogram">패킷암호화 사용 유무</param>
            <param name="event_recv">수신 이벤트 콜백 함수</param>
        </member>
        <member name="M:BlueEngine.cClient.Finalize">
            <summary>
            파괴자
            </summary>
        </member>
        <member name="M:BlueEngine.cClient.Connect(System.String,System.UInt16)">
            <summary>
            서버에 접속.
            </summary>
            <param name="address">서버 주소</param>
            <param name="port">서버 포트번호</param>
            <returns></returns>
        </member>
        <member name="M:BlueEngine.cClient.Connect(System.Net.Sockets.TcpClient)">
            <summary>
            서버에 접속.
            </summary>
            <param name="client">TcpClient 인스턴스</param>
            <returns>결과</returns>
        </member>
        <member name="M:BlueEngine.cClient.Disconnect">
            <summary>
            네트워크 접속 종료.
            </summary>
        </member>
        <member name="M:BlueEngine.cClient.Exception">
            <summary>
            예외처리를 위한 예외를 발생 시킨다.
            </summary>
            <returns>예외처리 객체.</returns>
        </member>
        <member name="M:BlueEngine.cClient.Exception(System.Object[])">
            <summary>
            예외처리를 위한 예외를 발생 시킨다.
            </summary>
            <param name="values">데이터리스트.</param>
            <returns>예외처리 객체.</returns>
        </member>
        <member name="M:BlueEngine.cClient.Log(System.Object[])">
            <summary>
            메시지 로그를 기록한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cClient.Print(System.Object[])">
            <summary>
            메시지를 콘솔창에 출력 한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cClient.Error(System.Object[])">
            <summary>
            에러메시지를 콘솔창에 출력 한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cClient.Send(BlueEngine.cNetwork.eOrder,BlueEngine.cNetwork.eResult)">
            <summary>
            데이터 송신.
            </summary>
            <param name="order">명령코드</param>
            <param name="result">결과코드</param>
        </member>
        <member name="M:BlueEngine.cClient.Send(BlueEngine.cBitStream)">
            <summary>
            데이터 송신.
            </summary>
            <param name="bits">비트스트림 데이터</param>
        </member>
        <member name="M:BlueEngine.cClient.Send(System.Byte[])">
            <summary>
            데이터 송신.
            </summary>
            <param name="data">바이트 데이터</param>
        </member>
        <member name="M:BlueEngine.cClient.Send(System.String)">
            <summary>
            데이터 송신.
            </summary>
            <param name="data">문자열 데이터</param>
        </member>
        <member name="M:BlueEngine.cClient.DoRecv(System.IAsyncResult)">
            <summary>
            데이터 수신 처리.
            </summary>
            <param name="result"></param>
        </member>
        <member name="M:BlueEngine.cClient.OnRecv(BlueEngine.cClient,System.Byte[],System.Int32)">
            <summary>
            수신된 데이터를 파싱한다.
            주의 : 이 함수는 상속 받아서 클라이언트마다 각자 프로토콜을 정의해서 사용한다.
            </summary>
            <param name="client">수신 클라이언트</param>
            <param name="data">수신 데이터</param>
            <param name="size">수신 데이터 크기</param>
        </member>
        <member name="M:BlueEngine.cClient.RecvObjectUpdate(BlueEngine.cClient,BlueEngine.cNetwork.eResult,BlueEngine.cBitStream)">
            <summary>
            동기화 오브젝트를 파싱.
            </summary>
            <param name="client">수신 클라이언트</param>
            <param name="result">결과값</param>
            <param name="bits">수신 데이터</param>
        </member>
        <member name="M:BlueEngine.cClient.UpdateUnityObject">
            ----------------------------------------------------------------------------------------------------
             <summary>
            		Unity오브젝트를 갱신한다..(미완성)
             </summary>
            ----------------------------------------------------------------------------------------------------
        </member>
        <member name="M:BlueEngine.cClient.UpdateObject">
            ----------------------------------------------------------------------------------------------------
             <summary>
            		cObject를 갱신한다. (미완성)
             </summary>
            ----------------------------------------------------------------------------------------------------
        </member>
        <member name="M:BlueEngine.cClient.GetNetClassAttribute(System.Reflection.MemberInfo)">
            <summary>
            네트워크 클래스 특성값 얻기
            </summary>
            <param name="member">멤버</param>
            <returns></returns>
        </member>
        <member name="M:BlueEngine.cClient.GetNetAttribute(System.Reflection.MemberInfo)">
            <summary>
            네트워크 특성값 얻기
            </summary>
            <param name="member">멤버</param>
            <returns></returns>
        </member>
        <member name="M:BlueEngine.cClient.GetHostAttribute(System.Reflection.MemberInfo)">
            <summary>
            호스트 특성값 얻기
            </summary>
            <param name="member">멤버</param>
            <returns></returns>
        </member>
        <member name="M:BlueEngine.cClient.GetGuestAttribute(System.Reflection.MemberInfo)">
            <summary>
            게스트 특성값 얻기
            </summary>
            <param name="member">멤버</param>
            <returns></returns>
        </member>
        <member name="M:BlueEngine.cClient.SendServerLogin(System.String,System.String,System.String)">
            <summary>
            송신 : 서버 : 로그인
            </summary>
            <param name="client_version">클라이언트 버전</param>
            <param name="member_id">회원 아이디</param>
            <param name="member_pw">회원 비밀번호</param>
        </member>
        <member name="M:BlueEngine.cClient.SendServerIn(System.String)">
            <summary>
            송신 : 서버 : 입장
            </summary>
            <param name="client_version">클라이언트 버전</param>
        </member>
        <member name="M:BlueEngine.cClient.SendServerOut">
            <summary>
            송신 : 서버 : 퇴장
            </summary>
        </member>
        <member name="M:BlueEngine.cClient.SendClientInfoDefault(System.UInt32)">
            <summary>
            송신 : 클라이언트 : 정보 : 기본
            </summary>
            <param name="client_id">클라이언트 아이디</param>
        </member>
        <member name="M:BlueEngine.cClient.SendChannelList">
            <summary>
            송신 : 채널 : 리스트
            </summary>
        </member>
        <member name="M:BlueEngine.cClient.SendChannelIn(System.Byte)">
            <summary>
            송신 : 채널 : 입장
            </summary>
            <param name="channel_id">채널ID.(NULL_ID이면 자동지정)</param>
        </member>
        <member name="M:BlueEngine.cClient.SendChannelOut">
            <summary>
            송신 : 채널 : 퇴장
            </summary>
        </member>
        <member name="M:BlueEngine.cClient.SendChannelChat(System.String)">
            <summary>
            송신 : 채널 : 채팅
            </summary>
            <param name="message">메시지</param>
        </member>
        <member name="M:BlueEngine.cClient.SendPartyChat(System.String)">
            <summary>
            송신 : 파티 : 채팅
            </summary>
            <param name="message">메시지</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageList">
            <summary>
            송신 : 스테이지 : 리스트
            </summary>
        </member>
        <member name="M:BlueEngine.cClient.SendStageInRequest(System.UInt32,System.Byte)">
            <summary>
            송신 : 스테이지 : 입장 : 요청
            </summary>
            <param name="stage_id">스테이지 아이디</param>
            <param name="max_user">최대 파티원 수</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageUserIn(System.UInt32[],BlueEngine.cVector3)">
            <summary>
            송신 : 스테이지 : 유저 : 입장
            </summary>
            <param name="equip_items">장착 아이템 리스트(임시)</param>
            <param name="stage_pos">스테이지 좌표</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageUserOut">
            <summary>
            송신 : 스테이지 : 유저 : 퇴장
            </summary>
        </member>
        <member name="M:BlueEngine.cClient.SendStageUserMove(BlueEngine.cVector3)">
            <summary>
            송신 : 스테이지 : 유저 : 이동
            </summary>
            <param name="stage_pos">스테이지 좌표</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageUserAttackMonster(System.UInt16)">
            <summary>
            송신 : 스테이지 : 유저 : 공격 : 몬스터
            </summary>
            <param name="monster_id">몬스터 아이디</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageUserSkillSelf(System.UInt16)">
            <summary>
            송신 : 스테이지 : 유저 : 스킬 사용 : 자신
            </summary>
            <param name="skill_id">스킬 아이디</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageUserSkillMonster(System.UInt16,System.UInt16[])">
            <summary>
            송신 : 스테이지 : 유저 : 스킬 사용 : 몬스터
            </summary>
            <param name="skill_id">스킬 아이디</param>
            <param name="monster_ids">타겟 몬스터 아이디 리스트</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageUserSkillPos(System.UInt16,BlueEngine.cVector3)">
            <summary>
            송신 : 스테이지 : 유저 : 스킬 사용 : 좌표
            </summary>
            <param name="skill_id">스킬 아이디</param>
            <param name="stage_pos">스테이지 좌표</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageUserDemage(System.UInt32,System.Boolean)">
            <summary>
            송신 : 스테이지 : 유저 : 데미지
            </summary>
            <param name="damage">데미지 값</param>
            <param name="death">죽음 유무 플래그</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageUserItemUseSelf(System.UInt64)">
            <summary>
            송신 : 스테이지 : 유저 : 아이템 사용 : 자신
            </summary>
            <param name="item_id">아이템 아이디</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageUserTriggerOn(System.UInt16)">
            <summary>
            송신 : 스테이지 : 유저 : 트리거 작동
            </summary>
            <param name="trigger_id">트리거 아이디</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageMonMove(System.UInt16,BlueEngine.cVector3)">
            <summary>
            송신 : 스테이지 : 몬스터 : 이동 : (파티장 권한 필요)
            </summary>
            <param name="monster_id">몬스터 아이디</param>
            <param name="stage_pos">스테이지 좌표</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageMonAttackUser(System.UInt16,System.UInt32)">
            <summary>
            송신 : 스테이지 : 몬스터 : 공격 : 유저 : (파티장 권한 필요)
            </summary>
            <param name="monster_id">몬스터 아이디</param>
            <param name="client_id">클라이언트 아이디</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageMonSkillSelf(System.UInt16,System.UInt16)">
            <summary>
            송신 : 스테이지 : 몬스터 : 스킬 사용 : 자신 : (파티장 권한 필요)
            </summary>
            <param name="monster_id">몬스터 아이디</param>
            <param name="skill_id">스킬 아이디</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageMonSkillUser(System.UInt16,System.UInt16,System.UInt32[])">
            <summary>
            송신 : 스테이지 : 몬스터 : 스킬 사용 : 유저 : (파티장 권한 필요)
            </summary>
            <param name="monster_id">몬스터 아이디</param>
            <param name="skill_id">스킬 아이디</param>
            <param name="client_ids">타겟 클라이언트 아이디 리스트</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageMonSkillPos(System.UInt16,System.UInt16,BlueEngine.cVector3)">
            <summary>
            송신 : 스테이지 : 몬스터 : 스킬 사용 : 좌표 : (파티장 권한 필요)
            </summary>
            <param name="monster_id">몬스터 아이디</param>
            <param name="skill_id">스킬 아이디</param>
            <param name="stage_pos">스테이지 좌표</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageMonDamage(System.UInt16,System.UInt32,System.Boolean)">
            <summary>
            송신 : 스테이지 : 몬스터 : 데미지 : (파티장 권한 필요)
            </summary>
            <param name="monster_id">몬스터 아이디</param>
            <param name="damage">데미지 값</param>
            <param name="death">죽음 유무 플래그</param>
        </member>
        <member name="M:BlueEngine.cClient.SendStageData(BlueEngine.cBitStream)">
            <summary>
            송신 : 스테이지 : 커스텀 데이터
            </summary>
            <param name="in_bits">커스텀 데이터</param>
        </member>
        <member name="E:BlueEngine.cClient.EventRecv">
            <summary>
            수신 이벤트
            </summary>
        </member>
        <member name="P:BlueEngine.cClient.Address">
            <summary>
            네트워크 주소
            </summary>
        </member>
        <member name="P:BlueEngine.cClient.UserAccount">
            <summary>
            유저 계정
            </summary>
        </member>
        <member name="P:BlueEngine.cClient.UserCharacter">
            <summary>
            유저 캐릭터
            </summary>
        </member>
        <member name="P:BlueEngine.cClient.Connected">
            <summary>
            접속중 플래그
            </summary>
        </member>
        <member name="P:BlueEngine.cClient.ClientID">
            <summary>
            클라이언트 아이디
            </summary>
        </member>
        <member name="P:BlueEngine.cClient.AccountID">
            <summary>
            계정 아이디
            </summary>
        </member>
        <member name="P:BlueEngine.cClient.Channel">
            <summary>
            채널 아이디
            </summary>
        </member>
        <member name="P:BlueEngine.cClient.Party">
            <summary>
            파티 아이디
            </summary>
        </member>
        <member name="P:BlueEngine.cClient.Stage">
            <summary>
            스테이지 아이디
            </summary>
        </member>
        <member name="P:BlueEngine.cClient.Master">
            <summary>
            파티장 플래그
            </summary>
        </member>
        <member name="P:BlueEngine.cClient.CharID">
            <summary>
            캐릭터 아이디
            </summary>
        </member>
        <member name="P:BlueEngine.cClient.CharName">
            <summary>
            캐릭터 이름
            </summary>
        </member>
        <member name="P:BlueEngine.cClient.CharItemInfoId">
            <summary>
            캐릭터 클래스
            </summary>
        </member>
        <member name="P:BlueEngine.cClient.Equip">
            <summary>
            장착 아이템
            </summary>
        </member>
        <member name="M:BlueEngine.cPolicyClient.#ctor(BlueEngine.EventRecv)">
            <summary>
            생성자
            </summary>
            <param name="event_recv">수신 이벤트 콜백 함수</param>
        </member>
        <member name="M:BlueEngine.cPolicyClient.#ctor(System.Net.Sockets.TcpClient,BlueEngine.EventRecv)">
            <summary>
            생성자
            </summary>
            <param name="client">TcpClient 인스턴스</param>
            <param name="event_recv">수신 이벤트 콜백 함수</param>
        </member>
        <member name="M:BlueEngine.cPolicyClient.#ctor(System.String,System.UInt16,BlueEngine.EventRecv)">
            <summary>
            생성자
            </summary>
            <param name="address">서버 주소</param>
            <param name="port">서버 포트번호</param>
            <param name="event_recv">수신 이벤트 콜백 함수</param>
        </member>
        <member name="M:BlueEngine.cPolicyClient.RequestPolicy(System.String,System.UInt16)">
            <summary>
            서버에 Polity 요청.
            </summary>
            <param name="address"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:BlueEngine.cPolicyClient.RequestPolicyWithUnity(System.String,System.UInt16)">
            <summary>
            서버에 Polity 요청.(UnityEngine 사용)
            </summary>
            <param name="address"></param>
            <param name="port"></param>
            <returns></returns>
        </member>
        <member name="M:BlueEngine.cPolicyClient.DoRecv(System.IAsyncResult)">
            <summary>
            데이터 수신 처리.
            </summary>
            <param name="result"></param>
        </member>
        <member name="E:BlueEngine.cPolicyClient.EventRecvPolity">
            <summary>
            수신 이벤트
            </summary>
        </member>
        <member name="T:BlueEngine.cParty">
            <summary>
            파티 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cParty.MAX_PARTY_ID">
            <summary>
            최대 파티 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cParty.MAX_PARTY_USER">
            <summary>
            최대 파티원 수
            </summary>
        </member>
        <member name="F:BlueEngine.cParty.s_party_id">
            <summary>
            파티 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cParty.m_party_id">
            <summary>
            파티 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cParty.m_max_user">
            <summary>
            최대 파티원 수
            </summary>
        </member>
        <member name="F:BlueEngine.cParty.m_lock_in">
            <summary>
            파티 : 잠금 : 입장
            </summary>
        </member>
        <member name="M:BlueEngine.cParty.#ctor(System.Byte)">
            <summary>
            생성자
            </summary>
            <param name="max_user">최대 파티원수</param>
        </member>
        <member name="P:BlueEngine.cParty.MaxUser">
            <summary>
            최대 파티원수
            </summary>
        </member>
        <member name="P:BlueEngine.cParty.MaxParty">
            <summary>
            최대 파티수 ( 서버 최대 수용 인원 / 최대 파티원 수 )
            </summary>
        </member>
        <member name="P:BlueEngine.cParty.UniquePartyID">
            <summary>
            새로운 유니크한 아이디를 얻는다.
            </summary>
        </member>
        <member name="P:BlueEngine.cParty.PartyID">
            <summary>
            파티 아이디
            </summary>
        </member>
        <member name="P:BlueEngine.cParty.LockIn">
            <summary>
            파티 : 잠금 : 입장
            </summary>
        </member>
        <member name="T:BlueEngine.NETCLASSAttribute">
            <summary>
            네트워크용 변수 특성.
            </summary>
        </member>
        <member name="F:BlueEngine.NETCLASSAttribute.m_freq">
            <summary>
            네트워크 동기화 주기.
            </summary>
        </member>
        <member name="F:BlueEngine.NETCLASSAttribute.m_last_sync_time">
            <summary>
            마지막 동기화된 시간.
            </summary>
        </member>
        <member name="M:BlueEngine.NETCLASSAttribute.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:BlueEngine.NETCLASSAttribute.#ctor(System.Single)">
            <summary>
            생성자
            </summary>
            <param name="freq">네트워크 동기화 주기.</param>
        </member>
        <member name="M:BlueEngine.NETCLASSAttribute.IsSync(System.Single)">
            <summary>
            네트워크 동기화될 시간인지 알아냄.
            </summary>
            <param name="time">현재 시간.</param>
            <returns>업데이트할 시간이지 유무.</returns>
        </member>
        <member name="P:BlueEngine.NETCLASSAttribute.Freq">
            <summary>
            네트워크 동기화 주기.
            </summary>
        </member>
        <member name="T:BlueEngine.NETAttribute">
            <summary>
            네트워크용 변수 특성.
            </summary>
        </member>
        <member name="F:BlueEngine.NETAttribute.m_max_size">
            <summary>
            변수 최대값. : 0이면 변수타입의 최대값
            </summary>
        </member>
        <member name="F:BlueEngine.NETAttribute.m_max_point">
            <summary>
            변수의 최대 소숫점 자릿수. : float,double 변수일때만 해당됨.
            </summary>
        </member>
        <member name="M:BlueEngine.NETAttribute.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:BlueEngine.NETAttribute.#ctor(System.UInt32)">
            <summary>
            생성자
            </summary>
            <param name="max_size">변수 최대값.</param>
        </member>
        <member name="M:BlueEngine.NETAttribute.#ctor(System.UInt32,System.Byte)">
            <summary>
            생성자
            </summary>
            <param name="max_size">변수 최대값.</param>
            <param name="max_point">변수의 최대 소숫점 자릿수.</param>
        </member>
        <member name="P:BlueEngine.NETAttribute.MaxSize">
            <summary>
            변수 최대값. : 0이면 변수타입의 최대값
            </summary>
        </member>
        <member name="P:BlueEngine.NETAttribute.MaxPoint">
            <summary>
            변수의 최대 소숫점 자릿수. : float,double 변수일때만 해당됨.
            </summary>
        </member>
        <member name="T:BlueEngine.HOSTAttribute">
            <summary>
            호스트용 변수 특성.
            </summary>
        </member>
        <member name="M:BlueEngine.HOSTAttribute.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:BlueEngine.HOSTAttribute.#ctor(System.UInt32)">
            <summary>
            생성자
            </summary>
            <param name="max_size">변수 최대값.</param>
        </member>
        <member name="M:BlueEngine.HOSTAttribute.#ctor(System.UInt32,System.Byte)">
            <summary>
            생성자
            </summary>
            <param name="max_size">변수 최대값.</param>
            <param name="max_point">변수의 최대 소숫점 자릿수.</param>
        </member>
        <member name="T:BlueEngine.GUESTAttribute">
            <summary>
            게스트용 변수 특성.
            </summary>
        </member>
        <member name="M:BlueEngine.GUESTAttribute.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:BlueEngine.GUESTAttribute.#ctor(System.UInt32)">
            <summary>
            생성자
            </summary>
            <param name="max_size">변수 최대값.</param>
        </member>
        <member name="M:BlueEngine.GUESTAttribute.#ctor(System.UInt32,System.Byte)">
            <summary>
            생성자
            </summary>
            <param name="max_size">변수 최대값.</param>
            <param name="max_point">변수의 최대 소숫점 자릿수.</param>
        </member>
        <member name="T:BlueEngine.EventRecv">
            <summary>
            네트워크 수신 이벤트
            </summary>
            <param name="client">cClient 인스턴스</param>
            <param name="data">수신된 데이터 바이트 배열.</param>
            <param name="size">수신된 데니터 크기.</param>
        </member>
        <member name="T:BlueEngine.cItemInfo">
            <summary>
             아이템 인포 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cItemInfo.MAX_ITEMINFO_ID">
            <summary>
            최대 아이템인포 아이디
            </summary>
        </member>
        <member name="F:BlueEngine.cItemInfo.m_item_info_id">
            <summary>
            아이템인포 아이디
            </summary>
        </member>
        <member name="P:BlueEngine.cItemInfo.ItemInfoID">
            <summary>
            아이템인포 아이디
            </summary>
        </member>
        <member name="T:BlueEngine.cServer">
            <summary>
            서버 베이스
            </summary>
        </member>
        <member name="F:BlueEngine.cServer.s_max_user">
            <summary>
            최대 유저수
            </summary>
        </member>
        <member name="F:BlueEngine.cServer.m_listener">
            <summary>
            TCP 소켓 리스너
            </summary>
        </member>
        <member name="F:BlueEngine.cServer.m_thread_main">
            <summary>
            메인 쓰래드
            </summary>
        </member>
        <member name="F:BlueEngine.cServer.m_state">
            <summary>
            현재 상태
            </summary>
        </member>
        <member name="F:BlueEngine.cServer.m_clients">
            <summary>
            클라이언트 리스트(key:클라이언트ID)
            </summary>
        </member>
        <member name="F:BlueEngine.cServer.m_channels">
            <summary>
            채널 리스트(key:채널ID)
            </summary>
        </member>
        <member name="F:BlueEngine.cServer.m_parties">
            <summary>
            파티 리스트(key:파티ID)
            </summary>
        </member>
        <member name="F:BlueEngine.cServer.m_stages">
            <summary>
            스테이지 개수(key:StageID)
            </summary>
        </member>
        <member name="M:BlueEngine.cServer.#ctor">
            <summary>
            생성자
            </summary>
        </member>
        <member name="M:BlueEngine.cServer.#ctor(System.String,System.String)">
            <summary>
            생성자
            </summary>
            <param name="name">이름</param>
            <param name="short_name">짧은이름</param>
        </member>
        <member name="M:BlueEngine.cServer.Start">
            <summary>
            서버 시작
            </summary>
        </member>
        <member name="M:BlueEngine.cServer.Start(System.UInt16)">
            <summary>
            서버 시작
            </summary>
            <param name="port">리슨 포트</param>
        </member>
        <member name="M:BlueEngine.cServer.Stop">
            <summary>
            서버 정지
            </summary>
        </member>
        <member name="M:BlueEngine.cServer.DisconnectClient(BlueEngine.cClient)">
            <summary>
            클라이언트 접속 종료
            </summary>
            <param name="client"></param>
        </member>
        <member name="M:BlueEngine.cServer.DoListen">
            <summary>
            리슨 프로세스
            </summary>
        </member>
        <member name="M:BlueEngine.cServer.OnRecv(BlueEngine.cClient,System.Byte[],System.Int32)">
            <summary>
            클라이언트로 부터 받은 패킷처리
            주의 : 이 함수를 상속받아서 수신 데이터 처리를 요함
            </summary>
            <param name="client"></param>
            <param name="data"></param>
            <param name="size"></param>
        </member>
        <member name="M:BlueEngine.cServer.Send(BlueEngine.cNetwork.eOrder,BlueEngine.cNetwork.eResult)">
            <summary>
            모든 클라이언트에 데이터 송신.
            </summary>
            <param name="order">명령코드</param>
            <param name="result">결과코드</param>
        </member>
        <member name="M:BlueEngine.cServer.Send(BlueEngine.cBitStream)">
            <summary>
            모든 클라이언트에 데이터 송신.
            </summary>
            <param name="bits">송신 데이터</param>
        </member>
        <member name="M:BlueEngine.cServer.Send(System.Byte[])">
            <summary>
            모든 클라이언트에 데이터 송신.
            </summary>
            <param name="bits">송신 데이터</param>
        </member>
        <member name="M:BlueEngine.cServer.SendChannel(System.Byte,BlueEngine.cNetwork.eOrder,BlueEngine.cNetwork.eResult)">
            <summary>
            채널에 소속된 클라이언트에 데이터 송신.
            </summary>
            <param name="channel_id">채널 아이디</param>
            <param name="order">명령코드</param>
            <param name="result">결과코드</param>
        </member>
        <member name="M:BlueEngine.cServer.SendChannel(System.Byte,BlueEngine.cBitStream)">
            <summary>
            채널에 소속된 클라이언트에 데이터 송신.
            </summary>
            <param name="channel_id">채널 아이디</param>
            <param name="bits">송신 데이터</param>
        </member>
        <member name="M:BlueEngine.cServer.SendParty(System.UInt32,BlueEngine.cNetwork.eOrder,BlueEngine.cNetwork.eResult)">
            <summary>
            파티에 소속된 클라이언트에 데이터 송신.
            </summary>
            <param name="party_id">파티 아이디</param>
            <param name="order">명령코드</param>
            <param name="result">결과코드</param>
        </member>
        <member name="M:BlueEngine.cServer.SendParty(System.UInt32,BlueEngine.cBitStream)">
            <summary>
            파티에 소속된 클라이언트에 데이터 송신.
            </summary>
            <param name="party_id">파티 아이디</param>
            <param name="bits">송신 데이터</param>
        </member>
        <member name="M:BlueEngine.cServer.AddClient(System.UInt32,BlueEngine.cClient)">
            <summary>
            클라이언트 추가.
            </summary>
            <param name="client_id">클라이언트 아이디.</param>
            <param name="value">클라이언트 인스턴스.</param>
        </member>
        <member name="M:BlueEngine.cServer.RemoveClient(System.UInt32)">
            <summary>
            클라이언트 삭제.
            </summary>
            <param name="client_id">클라이언트 아이디.</param>
        </member>
        <member name="M:BlueEngine.cServer.GetClient(System.UInt32,BlueEngine.cClient@)">
            <summary>
            클라이언트를 얻어온다.
            </summary>
            <param name="client_id">클라이언트 아이디.</param>
            <param name="value">클라이언트 객체.</param>
            <returns>성공 유무.</returns>
        </member>
        <member name="M:BlueEngine.cServer.AddChannel">
            <summary>
            채널 추가.
            </summary>
            <returns>채널 객체</returns>
        </member>
        <member name="M:BlueEngine.cServer.RemoveChannel(System.Byte)">
            <summary>
            채널 삭제.
            </summary>
            <param name="channel_id">삭제할 채널 아이디.</param>
            <returns>성공유무</returns>
        </member>
        <member name="M:BlueEngine.cServer.GetChannel(System.Byte,BlueEngine.cChannel@)">
            <summary>
            채널를 얻어온다.
            </summary>
            <param name="channel_id">채널 아이디.</param>
            <param name="channel">[출력]채널 객체.</param>
            <returns>성공 유무.</returns>
        </member>
        <member name="M:BlueEngine.cServer.GetChannelIn">
            <summary>
            입장 가능한 채널을 얻어온다.
            </summary>
            <returns>채널 객체.</returns>
        </member>
        <member name="M:BlueEngine.cServer.IsChannel(System.Byte)">
            <summary>
            채널를 존재 확인.
            </summary>
            <param name="channel_id">채널 아이디.</param>
            <returns>존재 유무.</returns>
        </member>
        <member name="M:BlueEngine.cServer.InChannel(System.Byte,BlueEngine.cClient)">
            <summary>
            채널 입장.
            </summary>
            <param name="channel_id">채널 아이디.</param>
            <param name="client">클라이언트 객체.</param>
            <returns>결과</returns>
        </member>
        <member name="M:BlueEngine.cServer.OutChannel(System.Byte,BlueEngine.cClient)">
            <summary>
            채널 퇴장.
            </summary>
            <param name="channel_id">채널 아이디.</param>
            <param name="client">클라이언트 객체.</param>
        </member>
        <member name="M:BlueEngine.cServer.AddParty(System.Byte)">
            <summary>
            파티 : 추가
            </summary>
            <returns>파티 객체</returns>
        </member>
        <member name="M:BlueEngine.cServer.RemoveParty(System.UInt32)">
            <summary>
            파티 : 삭제
            </summary>
            <param name="party_id"></param>
            <returns>성공유무</returns>
        </member>
        <member name="M:BlueEngine.cServer.GetParty(System.UInt32,BlueEngine.cParty@)">
            <summary>
            파티를 얻어온다.
            </summary>
            <param name="party_id">얻어올 파티 아이디.</param>
            <param name="party">출력될 파티 객체.</param>
            <returns>성공 유무.</returns>
        </member>
        <member name="M:BlueEngine.cServer.IsParty(System.UInt32)">
            <summary>
            파티를 존재 확인.
            </summary>
            <param name="party_id">파티 아이디.</param>
            <returns>존재 유무.</returns>
        </member>
        <member name="M:BlueEngine.cServer.InParty(System.UInt32,BlueEngine.cClient)">
            <summary>
            파티 입장.
            </summary>
            <param name="party_id">파티 아이디.</param>
            <param name="client">클라이언트 객체.</param>
            <returns>결과</returns>
        </member>
        <member name="M:BlueEngine.cServer.OutParty(System.UInt32,BlueEngine.cClient)">
            <summary>
            파티 퇴장.
            </summary>
            <param name="party_id">파티 아이디.</param>
            <param name="client">클라이언트 객체.</param>
        </member>
        <member name="M:BlueEngine.cServer.GetPartyUserCount(System.UInt32)">
            <summary>
            파티원수 구하기
            </summary>
            <param name="party_id">파티 아이디</param>
            <returns>파티원수</returns>
        </member>
        <member name="M:BlueEngine.cServer.GetPartyMaster(System.UInt32)">
            <summary>
            파티장 구하기
            </summary>
            <param name="party_id">파티 아이디</param>
            <returns>파티장아이디</returns>
        </member>
        <member name="M:BlueEngine.cServer.PartyLockIn(System.UInt32)">
            <summary>
            파티 : 잠금 : 입장
            </summary>
            <param name="party_id"></param>
            <returns>잠금유무</returns>
        </member>
        <member name="M:BlueEngine.cServer.InStage(System.UInt32,System.Byte,BlueEngine.cClient)">
            <summary>
            스테이지 입장.(추가+입장)
            </summary>
            <param name="stage_id">스테이지 아이디.</param>
            <param name="client">클라이언트 객체.</param>
            <param name="max_user">스테이지 최대 입장객수.</param>
            <returns>파티 아이디</returns>
        </member>
        <member name="M:BlueEngine.cServer.OutStage(System.UInt32,BlueEngine.cClient)">
            <summary>
            스테이지 퇴장.
            </summary>
            <param name="stage_id">스테이지 아이디.</param>
            <param name="client">클라이언트 객체.</param>
        </member>
        <member name="P:BlueEngine.cServer.MaxUser">
            <summary>
            최대 유저수
            </summary>
        </member>
        <member name="P:BlueEngine.cServer.State">
            <summary>
            현재 상태
            </summary>
        </member>
        <member name="P:BlueEngine.cServer.Clients">
            <summary>
            클라이언트 리스트(key:클라이언트ID)
            </summary>
        </member>
        <member name="P:BlueEngine.cServer.Channels">
            <summary>
            채널 리스트(key:채널ID)
            </summary>
        </member>
        <member name="P:BlueEngine.cServer.Parties">
            <summary>
            파티 리스트(key:파티ID)
            </summary>
        </member>
        <member name="P:BlueEngine.cServer.Stages">
            <summary>
            스테이지 리스트(key:스테이지ID)
            </summary>
        </member>
        <member name="T:BlueEngine.cServer.eState">
            <summary>
            서버 상태 정의
            </summary>
        </member>
        <member name="F:BlueEngine.cServer.eState.InActive">
            <summary>
            비활성
            </summary>
        </member>
        <member name="F:BlueEngine.cServer.eState.InActivating">
            <summary>
            비활성중
            </summary>
        </member>
        <member name="F:BlueEngine.cServer.eState.Activating">
            <summary>
            활성중
            </summary>
        </member>
        <member name="F:BlueEngine.cServer.eState.Active">
            <summary>
            활성
            </summary>
        </member>
        <member name="T:BlueEngine.cUnityObject">
            <summary>
            Unity 컴포넌트 제작을 위한 객체.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityObject.s_unique_id">
            <summary>
            유니크한 아이디 생성을 위한 정적 변수.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityObject.s_instances">
            <summary>
            인스턴스 리스트.
            </summary>
        </member>
        <member name="F:BlueEngine.cUnityObject.m_id">
            <summary>
            아이디.
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityObject.Awake">
            <summary>
            최초 활성화될때 호출됨
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityObject.OnEnable">
            <summary>
            활성화.
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityObject.OnDisable">
            <summary>
            비활성화 : OnDestroy()가 작동하지 않을때 사용할 수 있음.
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityObject.OnDestroy">
            <summary>
            파괴
            </summary>
        </member>
        <member name="M:BlueEngine.cUnityObject.AddInstance(System.UInt32,BlueEngine.cUnityObject)">
            <summary>
            인스턴스 추가.
            </summary>
            <param name="id">cUnityObject 아이디.</param>
            <param name="value">cUnityObject 인스턴스.</param>
        </member>
        <member name="M:BlueEngine.cUnityObject.RemoveInstance(System.UInt32)">
            <summary>
            인스턴스 삭제.
            </summary>
            <param name="id">삭제할 cUnityObject 아이디.</param>
        </member>
        <member name="M:BlueEngine.cUnityObject.GetInstance(System.UInt32,BlueEngine.cUnityObject@)">
            <summary>
            인스턴스를 얻어온다.
            </summary>
            <param name="id">얻어올 cUnityObject 아이디.</param>
            <param name="value">출력될 cUnityObject.</param>
            <returns>성공 유무.</returns>
        </member>
        <member name="M:BlueEngine.cUnityObject.Exception">
            <summary>
            예외처리를 위한 예외를 발생 시킨다.
            </summary>
            <returns>예외처리 객체.</returns>
        </member>
        <member name="M:BlueEngine.cUnityObject.Exception(System.Object[])">
            <summary>
            예외처리를 위한 예외를 발생 시킨다.
            </summary>
            <param name="values">데이터리스트.</param>
            <returns>예외처리 객체.</returns>
        </member>
        <member name="M:BlueEngine.cUnityObject.Log(System.Object[])">
            <summary>
            메시지 로그를 기록한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cUnityObject.Print(System.Object[])">
            <summary>
            메시지를 콘솔창에 출력 한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="M:BlueEngine.cUnityObject.Error(System.Object[])">
            <summary>
            에러메시지를 콘솔창에 출력 한다.
            </summary>
            <param name="values">데이터리스트.</param>
        </member>
        <member name="P:BlueEngine.cUnityObject.UniqueID">
            <summary>
            새로운 유니크한 아이디를 얻는다.
            </summary>
        </member>
        <member name="P:BlueEngine.cUnityObject.ID">
            <summary>
            아이디.
            </summary>
        </member>
        <member name="P:BlueEngine.cUnityObject.Instances">
            <summary>
            인스턴스 리스트.
            </summary>
        </member>
        <member name="T:BlueEngine.cMutex">
            <summary>
            Mutex 객체
            </summary>
        </member>
        <member name="F:BlueEngine.cMutex.m_lock">
            <summary>
            잠금 플래그
            </summary>
        </member>
        <member name="M:BlueEngine.cMutex.#ctor(System.Boolean)">
            <summary>
            생성자
            </summary>
            <param name="initiallyOwned">호출한 스레드에 뮤텍스의 초기 소유권을 부여하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:BlueEngine.cMutex.WaitOne">
            <summary>
            잠금 해재될때까지 기다린다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueEngine.cMutex.ReleaseMutex">
            <summary>
            잠금을 해제한다.
            </summary>
        </member>
    </members>
</doc>
